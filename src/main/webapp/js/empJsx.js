// Generated by CoffeeScript 1.9.3
var Application, SelectOption, optionv;

optionv = [
  {
    value: "optionOne",
    label: "Option One"
  }, {
    value: "optionsTwo",
    label: "Option Two",
    selected: true
  }
];

SelectOption = React.createClass({displayName: "SelectOption",
  handleChange: function(e) {
    return this.prop.onChange(e);
  },
  render: function() {
    var options;
    options = this.props.options.map(function(opt, i) {
      var defaultValue;
      if (opt.selected === true || opt.selected === 'selected') {
        if (this.props.multiple) {
          if (defaultValue === void 0) {
            defaultValue = [];
          }
          defaultValue.push(opt.value);
        } else {
          defaultValue = opt.value;
        }
      }
      return React.createElement("option", {
        "key": i,
        "value": opt.value,
        "label": opt.label
      }, opt.label);
    }, this);
    return React.createElement(ReactBootstrap.Input, {
      "type": "select",
      "label": '',
      "defaultValue": defaultValue,
      "multiple": this.props.multiple,
      "name": this.props.name,
      "style": this.props.style,
      "onSelect": this.handleChange
    }, options);
  }
});

Application = React.createClass({displayName: "Application",
  mixins: [wObj.FluxMixin, wObj.StoreWatchMixin("RecordStore")],
  getInitialState: function() {
    return {
      input1: 0,
      input2: 0,
      isModalOpen: false
    };
  },
  getStateFromFlux: function() {
    var store;
    this.props.flux = wObj.flux;
    store = wObj.flux.store("RecordStore");
    return {
      loading: store.loading,
      error: store.error,
      words: store.words
    };
  },
  render: function() {
    var name1, sieze1, total;
    total = Number(this.state.input1) + Number(this.state.input2);
    name1 = "input1";
    sieze1 = 2;
    return React.createElement("div", {
      "className": "container-fixed",
      "style": {
        fontSize: 12
      }
    }, React.createElement("p", {
      "style": {
        marginLeft: 30
      }
    }, total), React.createElement(ReactBootstrap.Row, {
      "style": {
        margin: 2
      }
    }, React.createElement(ReactBootstrap.Button, {
      "bsSize": "small",
      "bsStyle": "primary",
      "onClick": this.handleClick,
      "name": "btnSearch"
    }, "\u691c\u7d22"), React.createElement(ReactBootstrap.Button, {
      "bsSize": "small",
      "bsStyle": "primary",
      "onClick": this.handleClick,
      "name": "btnSearch2"
    }, "TEST"), React.createElement(ReactBootstrap.Button, {
      "bsSize": "small",
      "bsStyle": "primary",
      "onClick": this.handleClick,
      "name": "btnSearch"
    }, "\u691c\u7d22"), React.createElement(ReactBootstrap.Button, {
      "bsSize": "small",
      "bsStyle": "primary",
      "onClick": this.handleClick,
      "name": "btnSearch2"
    }, "\u691c\u7d22")), React.createElement("form", {
      "className": "form-horizontal",
      "style": {
        margin: 2
      }
    }, React.createElement(ReactBootstrap.Row, {
      "style": {
        margin: 2
      }
    }, React.createElement(ReactBootstrap.Col, {
      "xs": 1.,
      "style": {
        textAlign: "right",
        lineHeight: "20px",
        verticalAlign: "middle"
      }
    }, "\t\t\t\t\tTEST"), React.createElement(ReactBootstrap.Col, {
      "xs": sieze1
    }, React.createElement(ReactBootstrap.Input, {
      "type": "text",
      "value": this.state[name1],
      "name": name1,
      "onChange": this.handleChange,
      "style": {
        height: 20,
        fontSize: 12
      }
    }))), React.createElement(ReactBootstrap.Row, {
      "style": {
        margin: 2
      }
    }, React.createElement(ReactBootstrap.Col, {
      "xs": 1.,
      "style": {
        textAlign: "right",
        lineHeight: "20px",
        verticalAlign: "middle"
      }
    }, "TEST"), React.createElement(ReactBootstrap.Col, {
      "xs": sieze1
    }, React.createElement(ReactBootstrap.Input, {
      "type": "text",
      "value": this.state[name1],
      "name": name1,
      "onChange": this.handleChange,
      "style": {
        height: 20,
        fontSize: 12
      }
    })))), React.createElement(ReactBootstrap.Table, {
      "condensed": true,
      "style": {
        width: "100%"
      }
    }, React.createElement("tbody", null, React.createElement("tr", {
      "style": {
        height: 22
      }
    }, React.createElement("td", {
      "style": {
        width: 50,
        textAlign: "right",
        verticalAlign: "middle"
      }
    }, "TEST"), React.createElement("td", {
      "style": {
        width: 200
      }
    }, React.createElement(SelectOption, {
      "options": optionv,
      "style": {
        height: 24,
        fontSize: 12
      },
      "name": "testname",
      "onChange": this.handleChange
    })), React.createElement("td", {
      "style": {
        width: 550,
        textAlign: "left",
        verticalAlign: "middle"
      }
    }, "TEST")), React.createElement("tr", {
      "style": {
        height: 22
      }
    }, React.createElement("td", {
      "style": {
        width: 50,
        textAlign: "right",
        verticalAlign: "middle"
      }
    }, "TEST"), React.createElement("td", {
      "style": {
        width: 200
      }
    }, React.createElement(ReactBootstrap.Input, {
      "type": "select",
      "label": '',
      "style": {
        height: 24
      }
    }, React.createElement("option", {
      "value": ""
    }), React.createElement("option", {
      "value": "V1"
    }, "Value 1"), React.createElement("option", {
      "value": "V2"
    }, "Value 2")))))), React.createElement(ReactBootstrap.Row, null, "\t\t\t\x3CReactBootstrap.Col xs=", sieze1, "\x3E", React.createElement(ReactBootstrap.Input, {
      "type": "text",
      "value": this.state[name1],
      "name": name1,
      "onChange": this.handleChange
    }), "\t\t\t\x3C\x2F ReactBootstrap.Col\x3E"), React.createElement(ReactBootstrap.Row, null, "\t\t\t\x3CReactBootstrap.Col xs=", sieze1, "\x3E", React.createElement(ReactBootstrap.Input, {
      "type": "text",
      "value": this.state.input2,
      "name": "input2",
      "onChange": this.handleChange
    }), "\t\t\t\x3C\x2F ReactBootstrap.Col\x3E"));
  },
  componentDidMount: function() {
    return wObj.flux.actions.loadBuzz();
  },
  handleChange: function(e) {
    return wObj.handleChange(this, e);
  },
  handleClick: function(e) {
    return wObj.handleClick(this, e);
  }
});

React.render(React.createElement(Application, null), document.getElementById('content'));
