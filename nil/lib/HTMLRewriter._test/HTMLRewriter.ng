(function(){
	
	var HTMLRewriterPlugin=new Class(Plugin,{
		test:function(name)((name in this.rules)?10:0),
		rules:{},
		getRule:function(name){
			if(this.rules[name]){
				this.__rules__=this.__rules__||{};
				if(!this.__rules__[name]){
					this.__rules__[name]=new Rule(this.rules[name]);
				}
				return(this.__rules__[name]);
			}
		},
	});
	var {HTML}=require('LooseXML');
	var Rule=new Class({
		__new__:function(v){
			if(typeof(v)=='function'){
				this.rewrite=function(html,url)(v(String(html),String(url)));
			}else if(v instanceof RegExp){
				this.rewrite=function(html)(String(html).replace(v,''));
			}else if(v instanceof Array){
				if(typeof(v[0])=='function'){
					let obj={begin:v[0]};
					if(typeof(v[1])=='function'){
						obj.end=v[1];
					}
					if(typeof(v[2])=='function'){
						obj.text=v[2];
					}
					this.rewrite=function(html){
						if(html instanceof HTML){
							html.observe('begin',obj.begin);
							if(obj.end){
								html.observe('end',obj.begin);
							}
							if(obj.text){
								html.observe('text',obj.begin);
							}
							return(html);
						}else{
							return(new HTML(html,{events:obj}));
						}
					};
				}else if(v[0] instanceof RegExp){
					let p=v[0],r=v[1]||'';
					this.rewrite=function(html)(String(html).replace(p,r));
				}else if(v.length==1){
					var s=v[0];
					this.rewrite=function(html){
						if(!(html instanceof HTML)){
							html=new HTML(html);
						}
						html.$(s).execute(function(n){
							n.parent.remove(n);
						});
						return(html);
					};
				}else if(v.length==2){
					var [s,p]=v;
					this.rewrite=function(html){
						if(!(html instanceof HTML)){
							html=new HTML(html);
						}
						html.$(s).execute(function(n){
							n.match(p).execute(function(g){
								g.execute(function(n){
									n.parent.remove(n);
								});
							});
						});
						return(html);
					};
				}else{
					var [s,p,r]=v;
					if(p){
						if(typeof(r)=='function'){
							this.rewrite=function(html){
								if(!(html instanceof HTML)){
									html=new HTML(html);
								}
								html.$(s).execute(function(n){
									n.match(p).execute(function(g){
										var a=g.toArray();
										if(a.length){
											n.insert(a[0],r(a.join('')));
										}
										for(var i=0,l=a.length;i<l;i++){
											n.remove(a[i]);
										}
									});
								});
								return(html);
							};
						}else{
							this.rewrite=function(html){
								if(!(html instanceof HTML)){
									html=new HTML(html);
								}
								html.$(s).execute(function(n){
									n.match(p).execute(function(g){
										var f;
										g.execute(function(n){
											if(!f){
												n.parent.insert(n,r);
												f=true;
											}
											n.parent.remove(n);
										});
									});
								});
								return(html);
							};
						}
					}else{
						if(typeof(r)=='function'){
							this.rewrite=function(html){
								if(!(html instanceof HTML)){
									html=new HTML(html);
								}
								html.$(s).execute(function(n){
									n.parent.insert(n,r(String(n)));
									n.parent.remove(n);
								});
								return(html);
							};
						}else{
							this.rewrite=function(html){
								if(!(html instanceof HTML)){
									html=new HTML(html);
								}
								html.$(s).execute(function(n){
									n.parent.insert(n,r);
									n.parent.remove(n);
								});
								return(html);
							};
						}
					}
				}
			}
		},
	});
	
	
	var HTMLRewriter=new Class({
		__class__:{
			plugins:new Pluggable('HTMLRewriter',HTMLRewriterPlugin),
		},
		__new__:function(){
			this.__rules__=[];
			for(var i=0,l=arguments.length;i<l;i++){
				this.add(arguments[i]);
			}
		},
		add:function(r){
			var m;
			if(typeof(r)!='string'){
				this.__rules__.push(new Rule(r));
			}else if(m=r.match(/^(.*?)\/(.*)$/)){
				var p=this.constructor.plugins.item(m[1]);
				if(p && p.rules[m[2]]){
					this.__rules__.push(p.getRule(m[2]));
				}
			}else{
				var _this=this;
				this.constructor.plugins.select(r).execute(function(p){
					_this.__rules__.push(p.getRule(r));
				});
			}
			return(this);
		},
		rewrite:function(html,url){
			html=String(new HTML(html));
			url=String(url||'http://example.com/');
			for(var i=0,a=this.__rules__,l=a.length;i<l;i++){
				html=String(a[i].rewrite(html,url));
			}
			if(!(html instanceof HTML)){
				html=new HTML(html);
			}
			return(String(html));
		},
	});
	
	
	
	this.HTMLRewriter=HTMLRewriter;
})