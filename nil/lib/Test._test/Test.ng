(function(){
	var TestPlugin=new Class(Plugin,{
		tests:{},
		getTestsOf:function(name){
			var res={};
			return(res);
		},
	});
	var Test=new Class({},EventMixin,{
		__class__:{
			plugins:new Pluggable('Test',TestPlugin),
			
			test:function(a,ll,q){
				var test=new this();
				test.logLevel=ll||0;
				test.quick=q||0;
				var o={};
				for(var i=0,l=a.length;i<l;i++){
					var name=String(a[i]);
					var m;
					if(name=='-q'){
						test.quick=1;
					}else if(m=name.match(/^(\w+)::/)){
						var f=require(m[1]).directory.file('test.ng');
						if(f.exists){
							o[name]=f;
						}
					}else if(m=name.match(/^(\w+)@(\w+)/)){
						var p=this.plugins.item(m[2]);
						if(p){
							var obj={};
							for(let [n,v] in Iterator(p.tests)){
								let V=v;
								res[n]=function(test)(V(test,m[1]));
							}
							o[name]=obj;
						}else{
							var f=Main.directory.file('plugins/'+m[2]+'/'+m[1]+'/test.ng');
							if(f.exists){
								o[name]=obj;
							}
						}
					}else if(name.match(/[\\\/]$/)){
						test.add(cwd().directory(name).children);
					}else{
						test.add([cwd().file(name)]);
					}
				}
				test.add(o);
				return(test);
			},
		},
		__new__:function(src){
			this.children=[];
			this.state='undone';
			this.__childResults__={end:0,ok:0,failed:0,skipped:0};
			this.body=src;
			this.logLevel=0;
			this.quick=0;
			this.name='';
		},
		
		__addChild__:function(name,src){
			var res=new Test(src);
			res.name=name;
			res.parent=this;
			res.logLevel=this.logLevel;
			res.quick=this.quick;
			this.children.push(res);
			if(name && !(name in this)){
				this[name]=res;
			}
		},
		add:function(src){
			if(src instanceof Array){
				this.add($G(src));
			}else if(Object.isGenerator(src)){
				for(var v in src){
					this.__addChild__((v.name||'anonymous').replace(/^.*[\\\/]/,''),v);
				}
			}else if(typeof(src)=='object'){
				for(let [n,v] in Iterator(src)){
					this.__addChild__(n,v);
				}
			}else{
				for(var i=0,a=String(src).split(','),l=a.length;i<l;i++){
					this.__addChild__(a[i]);
				}
			}
			return(this);
		},
		
		run:function(){
			if(this.body && (this.state=='undone')){
				this.echo('begin');
				this.state='running';
				this.fire('begin');
				if(this.parent&&this.parent.setUp){
					this.parent.setUp(this);
				}
				if(typeof(this.body)!='function'){
					try{
						var res=(new ScriptFile(String(this.body))).eval();
						if(typeof(res)=='object'){
							this.add(res);
						}else if(typeof(res)=='function'){
							this.body=res;
						}else{
							this.ok(res);
						}
					}catch(e){
						this.fail(e);
					}
				}
				if(typeof(this.body)=='function'){
					try{
						this.body.call(null,this);
						
					}catch(e){
						this.fail(e);
					}
				}
				if((this.state=='running')&&(this.children.length==0)){
					this.fail('');
				}
				if(this.parent&&this.parent.tearDown){
					this.parent.tearDown(this);
				}
			}else if(this.state=='undone'){
				this.echo('begin');
			}
			for(var i=0,a=this.children,l=a.length;i<l;i++){
				a[i].run();
				if(!a[i].ended){
					a[i].wait('end');
				}
			}
			return(this);
		},
		timeout:function(ms){
			var _this=this;
			setTimeout(function(){
				_this.stop('timed out');
			},ms);
			return(this);
		},
		
		
		stop:function(msg){
			for(var i=0,a=this.children,l=a.length;i<l;i++){
				if(!a[i].ended){
					a[i].fail(msg||'');
				}
			}
			if(!this.ended){
				this.fail(msg||'');
			}
		},
		
		__endChild__:function(c){
			this.__childResults__[c.state]++;
			if(++this.__childResults__.end>=this.children.length){
				var msg='OK: '+this.__childResults__.ok
						+' / Failed: '+this.__childResults__.failed
						+' / Skipped: '+this.__childResults__.skipped
						+' / Total: '+this.__childResults__.end;
				if(this.__childResults__.failed>0){
					this.fail(msg);
				}else{
					this.ok(msg);
				}
			}
		},
		
		echo:function(msg,level){
			if(this.logLevel>(level||0)){
			}else if(this.parent){
				this.parent.echo(this.name+': '+msg,level);
			}else{
				println(msg);
			}
		},
		
		warn:function(msg){
			this.echo('Warn: '+msg,1);
		},
		
		__end__:function(msg){
			this.ended=true;
			this.result=msg;
			this.fire('end');
			this.echo(this.state+' '+(msg?('('+msg+')'):''),2);
			if(this.parent){
				this.parent.__endChild__(this);
			}
		},
		ok:function(msg){
			if(!this.ended){
				this.state='ok';
				this.fire('ok',{result:msg});
				this.__end__(msg);
			}
		},
		fail:function(msg){
			if(msg instanceof Error){
				msg=msg+'@'+msg.fileName+':'+msg.lineNumber+'\n'
					+msg.stack.replace(/[\n\r\s]*$/,"")
								.replace(/^(.{64}).*\)@/mg,'$1 ...)@').indent();
			}
			if(this.ended){
				this.warn(msg);
			}else{
				this.state='failed';
				this.fire('fail',{result:msg});
				this.__end__(msg);
			}
		},
		skip:function(msg){
			if(!this.ended){
				this.state='skipped';
				this.fire('skip',{result:msg});
				this.__end__(msg);
			}
		},
		
		
		
		
		
		assert:function(v,msg){
			if(v){
				this.ok(msg);
			}else{
				this.fail(msg);
			}
		},
		defined:function(v,msg)(this.assert(typeof(v)!='undefined',msg)),
		eq:function(a,b,msg)(this.assert(a==b,msg)),
		ne:function(a,b,msg)(this.assert(a!=b,msg)),
		is:function(a,b,msg)(this.assert(a===b,msg)),
		isnt:function(a,b,msg)(this.assert(a!==b,msg)),
		gt:function(a,b,msg)(this.assert(a>b,msg)),
		lt:function(a,b,msg)(this.assert(a<b,msg)),
		gte:function(a,b,msg)(this.assert(a>=b,msg)),
		lte:function(a,b,msg)(this.assert(a<=b,msg)),
		ask:function(msg)(this.assert(confirm(msg),msg)),
		
		
		
	});
	this.Test=Test;
})