(function(){
	
	
	var {COM,Unknown,BStr}=require('COM');
	
	var Persist=Unknown.define("Persist","{0000010C-0000-0000-C000-000000000046}",{
		GetClassID:[
			Pointer,        // [out] CLSID *pClassID
		]
	});
	var PersistFile=Persist.define("PersistFile","{0000010B-0000-0000-C000-000000000046}",{
		IsDirty:[],
		Load:[
			WideString,        // [in] LPCOLESTR pszFileName
			UInt,           // [in] DWORD dwMode
		],
		Save:[
			WideString,        // [in, unique] LPCOLESTR pszFileName
			Int,            // [in] BOOL fRemember
		],
		SaveCompleted:[
			WideString,        // [in, unique] LPCOLESTR pszFileName
		],
		GetCurFile:[
			Pointer,        // [out] LPOLESTR *ppszFileName
		]
	});
	
	var ShellLinkW=Unknown.define("ShellLinkW","{000214F9-0000-0000-C000-000000000046}",{
		GetPath:[
			WideString,     // [out, string, size_is(cch)] LPWSTR pszFile
			Int,            // [in] int cch
			Pointer,        // [in, out, unique] WIN32_FIND_DATAW *pfd
			UInt,           // [in] DWORD fFlags
		],
		GetIDList:[
			Pointer,        // [out] PIDLIST_ABSOLUTE *ppidl
		],
		SetIDList:[
			UInt,           // [in, unique] PCIDLIST_ABSOLUTE pidl
		],
		GetDescription:[
			WideString,     // [out, string, size_is(cch)] LPWSTR pszName
			Int,            //  int cch
		],
		SetDescription:[
			WideString,       // [in, string] LPCWSTR pszName
		],
		GetWorkingDirectory:[
			WideString,     // [out, string, size_is(cch)] LPWSTR pszDir
			Int,            //  int cch
		],
		SetWorkingDirectory:[
			WideString,       // [in, string] LPCWSTR pszDir
		],
		GetArguments:[
			WideString,     // [out, string, size_is(cch)] LPWSTR pszArgs
			Int,            // [in] int cch
		],
		SetArguments:[
			WideString,       // [in, string] LPCWSTR pszArgs
		],
		GetHotkey:[
			Pointer,        // [out] WORD *pwHotkey
		],
		SetHotkey:[
			UShort,         // [in] WORD wHotkey
		],
		GetShowCmd:[
			Pointer,        // [out] int *piShowCmd
		],
		SetShowCmd:[
			Int,            // [in] int iShowCmd
		],
		GetIconLocation:[
			WideString,     // [out, string, size_is(cch)] LPWSTR pszIconPath
			Int,            // [in] int cch
			Pointer,        // [out] int *piIcon
		],
		SetIconLocation:[
			WideString,       // [in, string] LPCWSTR pszIconPath
			Int,            // [in] int iIcon
		],
		SetRelativePath:[
			WideString,       // [in, string] LPCWSTR pszPathRel
			UInt,           // [in] DWORD dwReserved
		],
		Resolve:[
			UInt,           // [in, unique] HWND hwnd
			UInt,           // [in] DWORD fFlags
		],
		SetPath:[
			WideString,       // [in, string] LPCWSTR pszFile
		]
	}).addMembers({
		__class__:{
			classID:"{00021401-0000-0000-C000-000000000046}",
		},
	});
	
	
	
	var Shortcut=new Class(File,{
		load:function(){
			try{
				var link=ShellLinkW.create();
				var pf=link.toPersistFile();
				if(!pf || pf.Load(this.path,3)){
					return(void(0));
				}
				var obj={};
				var buf=WChar.alloc(4096);
				var p=UInt.alloc();
				
				link.GetPath(buf,4095,null,0);
				if(String(buf)){
					obj.file=this.parent.file(String(buf));
				}
				link.GetPath(buf,4095,null,12);
				obj.path=String(buf);
				link.GetArguments(buf,4095);
				var arg=String(buf);
				if(arg){
					var a=arg.split(' ');
					var r=[];
					var t;
					for(var i=0,l=a.length;i<l;i++){
						if(t){
							if(a[i].slice(-1)=='"'){
								t.push(a[i].slice(0,-1));
								r.push(t.join(" "));
								t=null;
							}else{
								t.push(a[i]);
							}
						}else if(a[i].slice(0,1)=='"'){
							if(a[i].slice(-1)=='"'){
								r.push(a[i].slice(1,-1));
							}else{
								t=[a[i].slice(1)];
							}
						}else if(a[i]){
							r.push(a[i]);
						}
					}
					obj.params=r;
				}else{
					obj.params=[];
				}
				
				obj.params=String(buf);
				obj.command='"'+obj.path+'"'+(arg?(' '+arg):'');
				
				link.GetWorkingDirectory(buf,4095);
				obj.workdir=this.parent.directory(String(buf));
				
				link.GetShowCmd(p);
				obj.show=p.item();
				
				link.GetHotkey(p);
				obj.hotkey=p.item();
				obj.keyCode=obj.hotkey&0xFF;
				obj.shift=!!(obj.hotkey&0x0100);
				obj.ctrl=obj.control=!!(obj.hotkey&0x0200);
				obj.alt=!!(obj.hotkey&0x0400);
				obj.ext=!!(obj.hotkey&0x0800);
				
				link.GetDescription(buf,4095);
				obj.description=String(buf);
				
				link.GetIconLocation(buf,4095,p);
				if(String(buf)){
					obj.icon=this.parent.file(String(buf));
				}
				obj.iconIndex=p.item();
				return(obj);
			}finally{
				free(p,buf,pf,link);
			}
			
		},
		save:function(obj)(this.update(obj)),
		update:function(obj){
			obj=obj||{};
			try{
				var link=ShellLinkW.create();
				var pf=link.toPersistFile();
				
				if('command' in obj){
					var m=obj.command.match(/^(?:"(.*?)"(?= |$)|^(\S+))(?: (.*$)|)/);
					obj.path=m[1]||m[2];
					obj.params=m[3];
					
					println([obj.path,obj.params]);
				}
				if('path' in obj){
					if(File.pathIsAbsolute(obj.path)){
						link.SetPath(obj.path);
					}else{
						link.SetRelativePath(obj.path);
					}
				}
				if('params' in obj){
					if(obj.params instanceof Array){
						for(var i=0,a=obj.params,l=a.length;i<l;i++){
							if(a[i].match(/ /)&&!a[i].match(/^".*"$/)){
								a[i]='"'+a[i]+'"';
							}
						}
						obj.params=obj.params.join(' ');
					}
					link.SetArguments(obj.params);
				}
				if('workdir' in obj){
					link.SetWorkingDirectory(String(obj.workdir));
				}
				
				if('show' in obj){
					link.SetShowCmd(obj.show);
				}
				
				if('key' in obj){
					obj.keyCode=(obj.key.code||obj.key);
				}
				if('keyCode' in obj){
					obj.hotkey=obj.keyCode
						|(+(!!obj.shift))<<8
						|(+(!!(obj.control||obj.ctrl)))<<9
						|(+(!!obj.alt))<<10
						|(+(!!obj.ext))<<11;
					
				}
				if('hotkey' in obj){
					link.SetHotkey(obj.hotkey);
				}
				
				if('description' in obj){
					link.SetDescription(obj.description);
				}
				
				if('icon' in obj){
					link.SetIconLocation(obj.icon,obj.iconIndex||0);
				}
				
				pf.Save(this.path,1);
				
				return(this);
			}finally{
				free(pf,link);
			}
		},
	});
	
	
	
	
	
	
	
	
	
	
	
	this.Shortcut=Shortcut;
	
})