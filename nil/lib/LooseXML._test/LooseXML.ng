(function(){
	
	var table={apos:"'",aelig:"\u00C6",aacute:"\u00C1",acirc:"\u00C2",agrave:"\u00C0",alpha:"\u0391",aring:"\u00C5",atilde:"\u00C3",auml:"\u00C4",beta:"\u0392",ccedil:"\u00C7",chi:"\u03A7",dagger:"\u2021",delta:"\u0394",eth:"\u00D0",eacute:"\u00C9",ecirc:"\u00CA",egrave:"\u00C8",epsilon:"\u0395",eta:"\u0397",euml:"\u00CB",gamma:"\u0393",iacute:"\u00CD",icirc:"\u00CE",igrave:"\u00CC",iota:"\u0399",iuml:"\u00CF",kappa:"\u039A",lambda:"\u039B",mu:"\u039C",ntilde:"\u00D1",nu:"\u039D",oelig:"\u0152",oacute:"\u00D3",ocirc:"\u00D4",ograve:"\u00D2",omega:"\u03A9",omicron:"\u039F",oslash:"\u00D8",otilde:"\u00D5",ouml:"\u00D6",phi:"\u03A6",pi:"\u03A0",prime:"\u2033",psi:"\u03A8",rho:"\u03A1",scaron:"\u0160",sigma:"\u03A3",thorn:"\u00DE",tau:"\u03A4",theta:"\u0398",uacute:"\u00DA",ucirc:"\u00DB",ugrave:"\u00D9",upsilon:"\u03A5",uuml:"\u00DC",xi:"\u039E",yacute:"\u00DD",yuml:"\u0178",zeta:"\u0396",aacute:"\u00E1",acirc:"\u00E2",acute:"\u00B4",aelig:"\u00E6",agrave:"\u00E0",alefsym:"\u2135",alpha:"\u03B1",amp:"\u0026",and:"\u2227",ang:"\u2220",aring:"\u00E5",asymp:"\u2248",atilde:"\u00E3",auml:"\u00E4",bdquo:"\u201E",beta:"\u03B2",brvbar:"\u00A6",bull:"\u2022",cap:"\u2229",ccedil:"\u00E7",cedil:"\u00B8",cent:"\u00A2",chi:"\u03C7",circ:"\u02C6",clubs:"\u2663",cong:"\u2245",copy:"\u00A9",crarr:"\u21B5",cup:"\u222A",curren:"\u00A4",darr:"\u21D3",dagger:"\u2020",darr:"\u2193",deg:"\u00B0",delta:"\u03B4",diams:"\u2666",divide:"\u00F7",eacute:"\u00E9",ecirc:"\u00EA",egrave:"\u00E8",empty:"\u2205",emsp:"\u2003",ensp:"\u2002",epsilon:"\u03B5",equiv:"\u2261",eta:"\u03B7",eth:"\u00F0",euml:"\u00EB",euro:"\u20AC",exist:"\u2203",fnof:"\u0192",forall:"\u2200",frac12:"\u00BD",frac14:"\u00BC",frac34:"\u00BE",frasl:"\u2044",gamma:"\u03B3",ge:"\u2265",gt:"\u003E",harr:"\u21D4",harr:"\u2194",hearts:"\u2665",hellip:"\u2026",iacute:"\u00ED",icirc:"\u00EE",iexcl:"\u00A1",igrave:"\u00EC",image:"\u2111",infin:"\u221E",int:"\u222B",iota:"\u03B9",iquest:"\u00BF",isin:"\u2208",iuml:"\u00EF",kappa:"\u03BA",larr:"\u21D0",lambda:"\u03BB",lang:"\u2329",laquo:"\u00AB",larr:"\u2190",lceil:"\u2308",ldquo:"\u201C",le:"\u2264",lfloor:"\u230A",lowast:"\u2217",loz:"\u25CA",lrm:"\u200E",lsaquo:"\u2039",lsquo:"\u2018",lt:"\u003C",macr:"\u00AF",mdash:"\u2014",micro:"\u00B5",middot:"\u00B7",minus:"\u2212",mu:"\u03BC",nabla:"\u2207",nbsp:"\u00A0",ndash:"\u2013",ne:"\u2260",ni:"\u220B",not:"\u00AC",notin:"\u2209",nsub:"\u2284",ntilde:"\u00F1",nu:"\u03BD",oacute:"\u00F3",ocirc:"\u00F4",oelig:"\u0153",ograve:"\u00F2",oline:"\u203E",omega:"\u03C9",omicron:"\u03BF",oplus:"\u2295",or:"\u2228",ordf:"\u00AA",ordm:"\u00BA",oslash:"\u00F8",otilde:"\u00F5",otimes:"\u2297",ouml:"\u00F6",para:"\u00B6",part:"\u2202",permil:"\u2030",perp:"\u22A5",phi:"\u03C6",pi:"\u03C0",piv:"\u03D6",plusmn:"\u00B1",pound:"\u00A3",prime:"\u2032",prod:"\u220F",prop:"\u221D",psi:"\u03C8",quot:"\u0022",rarr:"\u21D2",radic:"\u221A",rang:"\u232A",raquo:"\u00BB",rarr:"\u2192",rceil:"\u2309",rdquo:"\u201D",real:"\u211C",reg:"\u00AE",rfloor:"\u230B",rho:"\u03C1",rlm:"\u200F",rsaquo:"\u203A",rsquo:"\u2019",sbquo:"\u201A",scaron:"\u0161",sdot:"\u22C5",sect:"\u00A7",shy:"\u00AD",sigma:"\u03C3",sigmaf:"\u03C2",sim:"\u223C",spades:"\u2660",sub:"\u2282",sube:"\u2286",sum:"\u2211",sup:"\u2283",sup1:"\u00B9",sup2:"\u00B2",sup3:"\u00B3",supe:"\u2287",szlig:"\u00DF",tau:"\u03C4",there4:"\u2234",theta:"\u03B8",thetasym:"\u03D1",thinsp:"\u2009",thorn:"\u00FE",tilde:"\u02DC",times:"\u00D7",trade:"\u2122",uarr:"\u21D1",uacute:"\u00FA",uarr:"\u2191",ucirc:"\u00FB",ugrave:"\u00F9",uml:"\u00A8",upsih:"\u03D2",upsilon:"\u03C5",uuml:"\u00FC",weierp:"\u2118",xi:"\u03BE",yacute:"\u00FD",yen:"\u00A5",yuml:"\u00FF",zeta:"\u03B6",zwj:"\u200D",zwnj:"\u200C"};
	var __unescape__=function(str)(String(str)
								.replace(/&(\w+);/g,function($0,$1)(table[$1]||$0))
								.replace(/&#(\d+);/g,function($0,$1)(String.fromCharCode(parseInt($1,10))))
								.replace(/&#x([0-9a-f]+);/ig,function($0,$1)(String.fromCharCode(parseInt($1,16)))));
	var __escape__=function(str)(String(str)
								.replace(/&/g,'&amp;')
								.replace(/</g,'&lt;')
								.replace(/>/g,'&gt;')
								.replace(/'/g,"&apos;")
								.replace(/"/g,'&quot;'));
	
	var AbstractNode=new Class({
		get ancestors(){
			var n=this;
			while(n=n.parent){
				yield(n);
			}
		},
		descendantOf:function(node){
			var n=this;
			while(n=n.parent){
				if(n===node){
					return(n);
				}
			}
		},
		get index(){
			var p=this.parent;
			if(p){
				return(p.indexOf(this));
			}
		},
		get next(){
			var p=this.parent;
			if(p){
				return(p.item(p.indexOf(this)+1));
			}
		},
		get prev(){
			var p=this.parent;
			if(p){
				return(p.item(p.indexOf(this)-1));
			}
		},
		
		get strings(){
			yield(this.toString());
		},
		
		discard:function(){
			this.toString();
			this.parent.remove(this);
		},
	});
	
	var ParentMixin=new Class({
		get children(){
			var i=0;
			var c=this.__children__;
			while((i<c.length)||this.parsing){
				while((i>=c.length)&&this.parsing){
					(this.root||this).proceed();
				}
				if(i<c.length){
					yield(c[i++]);
				}
			}
		},
		get elements(){
			for(let n in this.children){
				if(n.type==1){
					yield(n);
				}
			}
		},
		get texts(){
			for(let n in this.children){
				if((n.type==3)||(n.type==4)){
					yield(n);
				}
			}
		},
		get comments(){
			for(let n in this.children){
				if(n.type==8){
					yield(n);
				}
			}
		},
		
		get descendants()($D(this,"children")),
		get descendantsAndSelf(){
			for(let c in this.children){
				if('descendantsAndSelf' in c){
					for(let n in c.descendantsAndSelf){
						yield(n);
					}
				}else{
					yield(c);
				}
			}
			yield(this);
		},
		
		get empty()(!this.__rawContent__&&(this.__children__.length==0)),
		get item(idx)(this.__children__[idx]),
		get count()(this.__children__.length),
		
		indexOf:function(o)((typeof(o)=='number')?o:this.__children__.indexOf(o)),
		append:function(){
			for(var i=0,l=arguments.length;i<l;i++){
				var node=arguments[i];
				if(typeof(node)=='string'){
					var sub=new (this.root.constructor)(node);
					for(let n in sub.children){
						n.parent=this;
						this.__children__.push(n);
					}
				}else if(node instanceof Fragment){
					for(let n in node.children){
						if(n.parent){
							n.parent.remove(n);
						}
						n.parent=this;
						this.__children__.push(n);
					}
				}else{
					if(node.parent){
						node.parent.remove(node);
					}
					node.parent=this;
					this.__children__.push(node);
				}
			}
			return(this);
		},
		insert:function(pos){
			pos=this.indexOf(pos);
			if(pos<0){
				pos=0;
			}
			if(pos>=this.__children__.length){
				this.append.apply(this,Array.slice(arguments,1));
			}else{
				var args=[pos,0];
				for(var i=1,l=arguments.length;i<l;i++){
					var node=arguments[i];
					if(typeof(node)=='string'){
						var sub=new (this.root.constructor)(node);
						for(let n in sub.children){
							n.parent=this;
							args.push(n);
						}
					}else if(node instanceof Fragment){
						for(let n in node.children){
							if(n.parent){
								n.parent.remove(n);
							}
							n.parent=this;
							args.push(n);
						}
					}else{
						if(node.parent){
							node.parent.remove(node);
						}
						node.parent=this;
						argus.push(node);
					}
				}
				Array.prototype.splice.apply(this.__children__,args);
			}
			return(this);
		},
		remove:function(pos){
			if(arguments.length<2){
				var n=this.__children__.splice(this.indexOf(pos),1).pop();
				while(n.parsing){
					n.root.proceed();
				}
				n.parent=null;
			}else{
				var indexes=new Array(arguments.length);
				for(var i=0,l=arguments.length;i<l;i++){
					indexes[i]=this.indexOf(arguments[i]);
				}
				var c=this.__children__,r=(this.__children__=new Array(c.length-indexes.length));
				for(var i=0,p=0,l=c.length;i<l;i++){
					if(indexes.indexOf(i)==-1){
						r[p++]=c[i];
					}else{
						c[i].parent=null;
					}
				}
				this.__children__=r;
			}
			return(this);
		},
		match:function(pattern){
			var nodes=[];
			var a=[];
			var i=0;
			for(let node in this.children){
				switch(node.type){
					case(1):{
						var attrs=[];
						for(let att in node.attributes){
							attrs[attrs.length]=att.toString();
						}
						attrs.sort();
						a[i]='<'+node.name+' '+attrs.join(' ')+' '+i+'>';
						break;
					}case(8):{
						a[i]='<!'+i+'>';
						break;
					}default:{
						a[i]='<_'+i+'>';
						break;
					}
				}
				nodes[i]=node;
				i++;
			}
			
			pattern=(pattern||"").replace(/<([^\s>]+)([^>]*?)(?: !([^>]*))?>/g,function($0,$1,$2,$3){
				switch($1){
					case('!'):case('_'):{
						return('<'+$1+'\\d+>');
					}default:{
						var ex=$3?('(?![^>]*'+$3.replace(/="\*"/g,'="[^"]*"').replace(/\s+/g,' [^>]*')+')'):'';
						return('<'+$1+'\\b'+ex+'[^>]*'+($2||' ').replace(/="\*"/g,'="[^"]*"').replace(/\s+/g,'[^>]*')+'[^>]*>');
						break;
					}
				}
				if($1){
				}else if($3){
					return('<'+$3+'\\b[^>]*>');
				}else{
					return('<[^>]*>');
				}
			});
			var text=a.join('');
			var ptn=new RegExp(pattern,'g');
			
			var m;
			while(m=ptn.exec(text)){
				let matched=m[0];
				let nds=nodes;
				yield((function(){
					var ip=/\d+(?=>)/g;
					var m;
					while(m=ip.exec(matched)){
						yield(nodes[Number(m[0])]);
					}
				})());
			}
		},
		
		
		
		analyze:function(maxlen,attrs){
			maxlen=maxlen||5;
			attrs=attrs||[];
			var a=[];
			var table={};
			for(let node in this.children){
				switch(node.type){
					case(1):{
						var ats=[];
						for(let att in this.attributes){
							if(attrs.indexOf(att.name)!=-1){
								ats[ats.length]=att.toString();
							}
						}
						if(ats.length){
							ats.sort();
							a[a.length]='<'+node.name+' '+ats.join(' ').replace(/[\.*+?^${(|[\\]/g,function($0)(String.fromCharCode($0.charCodeAt(0)+65248)))+'>';
						}else{
							a[a.length]='<'+node.name+'>';
						}
						break;
					}case(8):{
						a[a.length]='<!>';
						break;
					}default:{
						a[a.length]='<_>';
						break;
					}
				}
				var s=a[a.length-1];
				table[s]=(table[s]||0)+1;
			}
			if(table.__count__==0){
				return(void(0));
			}else if(table.__count__==1){
				for(let n in table){
					return(n);
				}
			}
			
			
			var mp, mc=0;
			for(var i=0,l=a.length;i<l;i++){
				var ptns={},ptn, idxs;
				for(var c=2;c<=maxlen;c++){
					ptn=a.slice(i,i+c).join('');
					idxs=ptns[ptn]||(ptns[ptn]={});
					for(var j=i,j2=i+c;j<j2;j++){
						idxs[j]=true;
					}
					/*
					idxs={};
					var p=[],repeating,last;
					for(var j=i;(j<l)&&(p.length<c);j++){
						if(a[j]!=last){
							repeating=false;
							p[p.length]=a[j];
						}else if(!repeating){
							p[p.length-1]='('+p[p.length-1]+')+';
							repeating=true;
						}
						idxs[j]=true;
						last=a[j];
					}
					*/
					ptn=p.join('');
					ptns[ptn]=Object.extend(ptns[ptn]||{},idxs);
				}
				for(let n in ptns){
					var cnt=n.__count__;
					if(cnt>mc){
						mp=n;
						mc=cnt;
					}
				}
			}
			return(mp);
		},
		
		
		
		$:function(sel){
			if(!(sel instanceof Array)){
				sel=String(sel).split(/\//);
			}
			var g;
			if(!sel[0]){
				sel.shift();
				g=$G([this.root||this]);
			}else{
				g=$G([this]);
			}
			for(var i=0,l=sel.length;i<l;i++){
				if(typeof(sel[i])=='function'){
					g=$G(sel[i](g));
				}else if(sel[i]=='..'){
					g=(let(_g=g)(function(){
						for(let n in _g){
							yield(g.parent);
						}
					}))();
				}else if(sel[i]!='.'){
					var s=String(sel[i]);
					var [,t,p]=s.match(/^(.*?)\[(.*)\]/)||[,s,""];
					let _g=g;
					switch(t){
						case(''):{
							g=(function(){
								for(let n in _g){
									yield(n.descendantsAndSelf);
								}
							})();
							break;
						}case('text()'):{
							g=(function(){
								for(let n in _g){
									yield(n.texts);
								}
							})();
							break;
						}case('comment()'):{
							g=(function(){
								for(let n in _g){
									yield(n.comments);
								}
							})();
							break;
						}case('node()'):{
							g=(function(){
								for(let n in _g){
									yield(n.children);
								}
							})();
							break;
						}case('*'):{
							g=(function(){
								for(let n in _g){
									yield(n.elements);
								}
							})();
							break;
						}case('@*'):{
							g=(function(){
								for(let n in _g){
									yield(n.attributes);
								}
							})();
							break;
						}default:{
							var m;
							if(m=t.match(/^#(.*)/)){
								let id=m[1];
								g=(function(){
									for(let n in _g){
										var node=n.getElementById(id);
										if(node){
											yield([node]);
											return;
										}
									}
								})();
							}else if(m=t.match(/^@(.*)/)){
								let name=String(m[1]),pn;
								switch(name.split(/:/).length){
									case(1):{
										pn="name";
										break;
									}case(2):{
										pn="prefixedName";
										break;
									}default:{
										pn="fullName";
										break;
									}
								}
								if(this.root.ignoreCase){
									name=name.toLowerCase();
								}
								g=(function(){
									for(let n in _g){
										yield(n.attributes.filter(function(e)(e[pn]==name)));
									}
								})();
							}else{
								let name=String(t),pn;
								switch(name.split(/:/).length){
									case(1):{
										pn="name";
										break;
									}case(2):{
										pn="prefixedName";
										break;
									}default:{
										pn="fullName";
										break;
									}
								}
								if(this.root.ignoreCase){
									name=name.toLowerCase();
								}
								g=(function(){
									for(let n in _g){
										yield(n.elements.filter(function(e)(e[pn]==name)));
									}
								})();
							}
							break;
						}
					}
					if(p.match(/^\d+$/)){
						p=parseInt(p,10);
						g=(let(__g=g)(function(){
							for(let _g in __g){
								yield($G(_g).item(p));
							}
						}))();
					}else if(p){
						g=(let(__g=g)(function(){
							for(let _g in __g){
								yield($G(_g).last());
							}
						}))();
					}else{
						g=(let(__g=g)(function(){
							for(let _g in __g){
								for(let n in $G(_g)){
									yield(n);
								}
							}
						}))();
					}
				}
			}
			return(g);
		},
		$0:function(sel)(this.$(sel).first()),
		$E:function(name){
			name=String(name);
			var pn;
			switch(name.split(/:/).length){
				case(1):{
					pn="name";
					break;
				}case(2):{
					pn="prefixedName";
					break;
				}default:{
					pn="fullName";
					break;
				}
			}
			if(this.root.ignoreCase){
				name=name.toLowerCase();
			}
			for(let n in this.descendants){
				if((n.type==1)&&(n[pn]==name)){
					yield(n);
				}
			}
		},
		getElementsByTagName:function(name)(this.$E(name)),
	});
	
	
	var Element=new Class(AbstractNode,ParentMixin,{
		type:1,
		__new__:function(root,name,attrs){
			this.root=root;
			[,this.prefix,this.name]=String(name).match(/^(.*):(.*)$/)||["","",name];
			this.__children__=[];
			this.__attributes__={};
			this.__namespaces__={};
			var a=[];
			for each(let [n,v] in Iterator(attrs)){
				var m;
				if(m=String(n).match(/^xmlns(?:\:(.*))$/i)){
					this.addNamespace(m[1],v);
				}else{
					a.push([n,v]);
				}
			}
			for(var i=0,l=a.length;i<l;i++){
				this.set(a[i][0],a[i][1]);
			}
		},
		
		get namespaceURI()(this.__namespaces__[this.prefix]||""),
		get fullName()(this.namespaceURI+"::"+this.name),
		get qName()((this.prefix?(this.prefix+":"):"")+this.name),
		get prefixedName()((this.prefix||"")+":"+this.name),
		
		get parsing()(this.__parsing__ && this.root.parsing && this.root.__source__),
		
		get parent()(this.__parentNode__),
		set parent(p){
			if(this.__namespaces__){
				this.__namespaces__.__proto__=(p||{}).__namespaces__;
			}
			this.__parentNode__=p;
		},
		addNamespace:function(prefix,uri){
			this.__namespaces__[prefix||""]=String(uri);
			return(this);
		},
		removeNamespace:function(prefix){
			delete(this.__namespaces__[prefix||""]);
			return(this);
		},
		
		get attributes(){
			for each(let [n,v] in Iterator(this.__attributes__)){
				yield(v);
			}
		},
		
		__nameType__:function(name)(["name","name","qName"][String(name).split(/:/).length]||"fullName"),
		__toQName__:function(name){
			if(this.root.ignoreCase){
				name=String(name).toLowerCase();
			}
			if(this.__nameType__(name)=='fullName'){
				var [,u,n]=String(name).match(/^(.*:.*):(.*)$/)||[];
				if(u){
					for each(let [p,v] in this.__namespaces__){
						if(v==u){
							return(p?(p+":"+n):n);
						}
					}
				}
			}
			return(n||name);
		},
		get id()((this.__attributes__.id||{}).value),
		set id(v)(this.set('id',v)),
		has:function(name)(this.__toQName__(name) in this.__attributes__),
		unset:function(name)(delete(this.__attributes__[this.__toQName__(name)])),
		get:function(name)((this.__attributes__[this.__toQName__(name)]||{}).value),
		set:function(name,value){
			name=this.__toQName__(name);
			if(this.root.ignoreCase){
				name=String(name).toLowerCase();
			}
			if(this.__attributes__[name]){
				this.__attributes__[name].value=value;
			}else{
				(this.__attributes__[name]=new Attribute(this.root,name,value)).parent=this;
			}
			return(this);
		},
		"@":function(name,value){
			var pn=this.__nameType__(name);
			if(this.root.ignoreCase){
				name=String(name).toLowerCase();
			}
			for(let a in this.attributes){
				if(a[pn]==name){
					if(arguments.length>1){
						a.value=value;
					}
					return(a);
				}
			}
			if(pn=='fullName'){
				name=this.__toQName__(name);
			}
			(this.__attributes__[name]=new Attribute(this.root,name,value)).parent=this;
			return(this.__attributes__[name]);
		},
		
		get content(){
			while(this.parsing){
				this.root.proceed();
			}
			var res=[];
			if(this.__rawContent__){
				res.push(this.__rawContent__);
			}else{
				for(let o in this.children){
					res.push(o.toString());
				}
			}
			return(res.join(''));
		},
		get text(){
			while(this.parsing){
				this.root.proceed();
			}
			var res=[];
			if(this.__rawContent__){
				res.push(this.__rawContent__);
			}else{
				for(let o in this.children){
					res.push(o.text);
				}
			}
			return(res.join(''));
		},
		
		get strings(){
			if(this.suspended){
				yield(this.toString());
			}else{
				var f;
				for(let n in this.children){
					if(!f){
						f=true;
						yield(this.toString(0,1,1));
					}
					for(let s in n.strings){
						yield(s);
					}
				}
				if(f){
					yield(this.toString(1,1,0));
				}else{
					yield(this.toString());
				}
			}
		},
		
		toString:function(noBegin,noBody,noEnd){
			if(!noBody){
				while(this.parsing){
					this.root.proceed();
				}
			}
			var res=[];
			if(!noBegin){
				res.push('<'+this.qName);
				for each(let [n,v] in Iterator(this.__namespaces__)){
					res.push(' xmlns'+(n?(":"+n):"")+'="'+__escape__(v)+'"');
				}
				for(let a in this.attributes){
					res.push(' '+a.toString());
				}
				if(this.root.emptyTags.indexOf(this.name)!=-1){
					res.push(' />');
				}else{
					res.push('>');
				}
			}
			if(this.root.emptyTags.indexOf(this.name)==-1){
				if(!noBody){
					if(this.__rawContent__){
						res.push(this.__rawContent__);
					}else{
						for(var i=0,a=this.__children__,l=a.length;i<l;i++){
							res.push(a[i].toString());
						}
					}
				}
				if(!noEnd){
					res.push('</'+this.qName+'>');
				}
			}
			return(res.join(''));
		},
		
		
		getElementById:function(id){
			var root=this.root,ids=root.__ids__, e;
			while(!ids[id] && this.parsing){
				root.proceed();
			}
			if(e=ids[id]){
				for(let n in e.ancestors){
					if(this===n){
						return(e);
					}
				}
			}
		},
		
		
	});
	var Attribute=new Class({
		type:2,
		__new__:function(root,name,value){
			this.root=root;
			[,this.prefix,this.name]=String(name).match(/^(.*):(.*)$/)||["","",name];
			this.value=value;
		},
		get namespaceURI()(this.prefix?((this.parent||this.root).namespaces[this.prefix]||""):(this.parent||this.root).namespaceURI),
		get fullName()(this.namespaceURI+":"+this.name),
		get qName()((this.prefix?(this.prefix+":"):"")+this.name),
		get prefixedName()((this.prefix||"")+":"+this.name),
		toString:function()(this.qName+'="'+__escape__(this.value||"")+'"'),
	});
	
	var Text=new Class(AbstractNode,{
		type:3,
		name:"#text",
		__new__:function(root,value,escaped){
			this.root=root;
			this[escaped?'__value__':'value']=value;
		},
		get text()(('value' in this)?this.value:(this.value=__unescape__(this.__value__||""))),
		set text(t)(this.__modified__=true,this.value=t),
		toString:function()(this.__modified__?__escape__(this.value):(this.__value__||__escape__(this.value||""))),
	});
	var CData=new Class(AbstractNode,{
		type:4,
		name:"#cdata-section",
		__new__:function(root,value){
			this.root=root;
			this.value=value;
		},
		get text()(this.value),
		set text(t)(this.value=t),
		toString:function()("<![CDATA["+String(this.value||"").replace(/\]\]>/g,"]]]]><![CDATA[>")+"]]>"),
	});
	var Comment=new Class(AbstractNode,{
		type:8,
		name:"#comment",
		__new__:function(root,value){
			this.root=root;
			this.value=value;
		},
		get text()(""),
		set text(s){},
		toString:function()("<!--"+String(this.value||"").replace(/-->/g,"----><!-->")+"-->"),
	});
	
	var DocumentType=new Class({
		type:10,
	});
	var ProcessingInstruction=new Class({
		type:7,
	});
	var Fragment=new Class({},ParentMixin,{
		type:11,
		name:"#document-fragment",
		__new__:function(root,src){
			this.root=root;
			this.__children__=[];
			if(typeof(src)=='string'){
				this.append(src);
			}else{
				this.append.apply(this,$G(src||[]).toArray());
			}
		},
	});
	
	var LooseXML=new Class({},EventMixin,ParentMixin,{
		type:9,
		name:"#document",
		__new__:function(src,options){
			this.__namespaces__={};
			this.__ids__={};
			this.__children__=[];
			this.current=this;
			this.parent=null;
			for each(let [n,v] in Iterator(options||{})){
				if(n=="events"){
					for each(let [n,v] in Iterator(v)){
						this.observe(n,v);
					}
				}else{
					this[n]=v;
				}
			}
			this.__remain__="";
			this.source=src;
			this.root=this;
		},
		free:function(){
			this.source=null;
		},
		
		
		readTextSize:1024,
		closeStream:false,
		get source()(this.__source__),
		set source(s){
			if(this.__source__){
				this.__source__.close();
			}
			if(s){
				if(typeof(s)=='string'){
					s=(function(str,sz){
						for(var i=0,l=str.length;i<l;i+=sz){
							yield(str.slice(i,i+sz));
						}
					})(s,this.readTextSize);
				}else if(s instanceof XML){
					s=(function(str,sz){
						for(var i=0,l=str.length;i<l;i+=sz){
							yield(str.slice(i,sz));
						}
					})(String(s),this.readTextSize);
				}else if(s.openRead){
					s=(function(stream,size){
						try{
							while(!stream.eof){
								yield(stream.readText(size));
							}
						}finally{
							stream.free && stream.free();
						}
					})(s.openRead(),this.readTextSize);
				}else if(s.readText){
					s=(function(stream,size,close){
						try{
							while(!stream.eof){
								yield(stream.readText(size));
							}
						}finally{
							close&& stream.free && stream.free();
						}
					})(s,this.readTextSize,!!this.closeStream);
				}else if(!Object.isGenerator(s)){
					s=$G(s);
				}
			}
			this.__source__=s;
		},
		
		ignoreWhitespaces:true,
		ignoreComments:false,
		ignoreProcessingInstructions:true,
		emptyTags:[],
		dataTags:[],
		allowedChildElements:{},
		
		__read__:function(){
			if(this.__source__){
				this.__remain__+=this.__source__.next();
			}else{
				throw(StopIteration);
			}
		},
		get parsing()(!!this.__source__),
		
		proceed:function(){
			var idx;
			try{
				try{
					while(this.__remain__.length<9){
						this.__read__();
					}
				}catch(e if e===StopIteration){
				}
				if((this.dataTags.indexOf(this.current.name)!=-1)&&!('__rawContent__' in this.current)){
					var name=this.current.name;
					var re=new RegExp('</'+name+'\\s*>',this.ignoreCase?'i':'');
					while((idx=this.__remain__.search(re))==-1){
						this.__read__();
					}
					var res=this.__remain__.slice(0,idx);
					this.__remain__=this.__remain__.slice(idx);
					this.current.__rawContent__=(!this.ignoreWhitespaces || !res.match(/^\s*$/))?(res||""):"";
				}else if(this.__remain__.slice(0,1)=='<'){
					if(this.__remain__.slice(0,4)=='<!--'){
						while((idx=this.__remain__.indexOf('-->'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(4,idx);
						this.__remain__=this.__remain__.slice(idx+3);
						if(this.ignoreComments){
							return(this.proceed());
						}else{
							var obj=new Comment(this,res);
							this.current.append(obj);
							this.fire('comment',{node:obj});
						}
					}else if(this.__remain__.slice(0,9)=='<![CDATA['){
						while((idx=this.__remain__.indexOf(']]>'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(9,idx);
						this.__remain__=this.__remain__.slice(idx+3);
						this.current.append(new CData(this,res));
						this.fire('text',{node:obj});
					}else if(this.__remain__.slice(0,2)=='<?'){
						while((idx=this.__remain__.indexOf('?>'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(2,idx);
						this.__remain__=this.__remain__.slice(idx+2);
						if(this.ignoreProcessingInstructions){
							return(this.proceed());
						}else{
							var [,name,option]=res.match(/^(.*?) (.*)$/)||[,res,""];
							this.current.append(new ProcessingInstruction(this,name,option));
						}
					}else if(this.__remain__.slice(0,9)=='<!DOCTYPE'){
						while((idx=this.__remain__.indexOf('>'))==-1){
							this.__read__();
						}
						var idx2=this.__remain__.indexOf('[');
						if((idx2==-1)||(idx<idx2)){
							this.__remain__=this.__remain__.slice(idx+1);
							return(this.proceed());
						}else{
							while((idx=this.__remain__.indexOf(']>'))==-1){
								this.__read__();
							}
							this.__remain__=this.__remain__.slice(idx+2);
							return(this.proceed());
						}
					}else if(this.__remain__.slice(0,2)=='</'){
						while((idx=this.__remain__.indexOf('>'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(2,idx).replace(/\s+$/,"");
						this.__remain__=this.__remain__.slice(idx+1);
						this.end(this.ignoreCase?res.toLowerCase():res);
					}else if(this.__remain__.match(/^<[a-zA-Z]/)){
						while((idx=this.__remain__.indexOf('>'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(1,idx);
						this.__remain__=this.__remain__.slice(idx+1);
						
						var [,name,option,]=res.match(/^([^\s\/]+)([\s\S]*)$/)||(println(res)&&[,res,""]);
//						var [,name,option,]=res.match(/^(\S+(?=\s|\/|$))(\s[\s\S]*?|\s*)$/);
						var attrs={};
						var m,re=/\s*([^\/\s=]+)(\s*=\s*'([^'>]*)'|\s*=\s*"([^">]*)"|=(\S*)|)/g;
						while(m=re.exec(option)){
							attrs[this.ignoreCase?m[1].toLowerCase():m[1]]=m[2]?__unescape__(m[3]||m[4]||m[5]||""):void(0);
						}
						this.begin(name=this.ignoreCase?name.toLowerCase():name,attrs,(this.emptyTags.indexOf(name)!=-1)||option.slice(re.lastIndex).match(/\/$/));
					}else{
						this.__remain__=this.__remain__.slice(1);
						while((idx=this.__remain__.indexOf('<'))==-1){
							this.__read__();
						}
						var res=this.__remain__.slice(0,idx);
						this.__remain__=this.__remain__.slice(idx);
						if(!res || (this.ignoreWhitespaces && res.match(/^\s*$/))){
							return(this.proceed());
						}
						var obj=new Text(this,'<'+res,true);
						this.current.append(obj);
						this.fire('text',{node:obj});
					}
				}else{
					while((idx=this.__remain__.indexOf('<'))==-1){
						this.__read__();
					}
					var res=this.__remain__.slice(0,idx);
					this.__remain__=this.__remain__.slice(idx);
					if(!res || (this.ignoreWhitespaces && res.match(/^\s*$/))){
						return(this.proceed());
					}
					var obj=new Text(this,res,true);
					this.current.append(obj);
					this.fire('text',{node:obj});
				}
			}catch(e if e===StopIteration){
				if(this.__remain__ && (!this.ignoreWhitespaces||!this.__remain__.match(/^\s*$/))){
					var obj=new Text(this,this.__remain__,true);
					this.current.append(obj);
					this.fire('text',{node:obj});
				}
				this.__source__=null;
			}
		},
		begin:function(name,attrs,empty){
			while((this.allowedChildElements[this.current.name]||[name]).indexOf(name)==-1){
				this.end();
			}
			var e=new Element(this,name,attrs);
			if("id" in attrs){
				this.__ids__[attrs.id]=e;
			}
			var c=this.current;
			this.current.append(e);
			this.current=e;
			if(empty){
				this.fire("begin",{node:e,empty:true});
				this.fire("end",{node:e});
				if(this.current===e){
					this.current=c;
				}
			}else{
				e.__parsing__=true;
				this.fire("begin",{node:e,empty:false});
			}
			return(this);
		},
		end:function(name){
			if(!this.current.parent){
				
			}else if(name){
				var b=[];
				for(var c=this.current;c;c=c.parent){
					b.push(c);
					if([c.name,c.qName,c.fullName].indexOf(name)!=-1){
						while(c!==this.current){
							this.end();
						}
						this.end();
						return(this);
					}
				}
			}else{
				this.current.__parsing__=false;
				this.fire("end",{node:this.current});
				
				this.current=this.current.parent;
				return(this);
			}
			return(this);
		},
		parse:function(src){
			if(src){
				this.source=src;
			}
			while(this.__source__){
				this.proceed();
			}
			return(this);
		},
		toString:function(){
			var a=[];
			for(let c in this.children){
				a.push(c.toString());
			}
			return(a.join(""));
		},
		get strings(){
			for(let n in this.children){
				for(let s in n.strings){
					yield(s);
				}
			}
		},
		
		get text(){
			var a=[];
			for(let c in this.children){
				a.push(c.text);
			}
			return(a.join(""));
		},
		
		createElement:function(name,attrs)(new Element(this,name,attrs)),
		createTextNode:function(value)(new Text(this,value)),
		createCData:function(value)(new CData(this,value)),
		createComment:function(value)(new Comment(this,value)),
		createFragment:function(src)(new Fragment(this,src)),
		
		
		getElementById:function(id){
			var ids=this.__ids__, e;
			while(!ids[id] && this.__source__){
				this.proceed();
			}
			return(ids[id]);
		},
	});
	
	var __inlineElements__=	['button','label','textarea','select','input','iframe','bdo','span','sup','sub','q','map','script','br','basefont','font','object','applet','img','a','acronym','abbr','cite','var','kbd','samp','code','dfn','strong','em','small','big','strike','s','u','b','i','tt'];
	var __allElements__=	['button','label','textarea','select','input','iframe','bdo','span','sup','sub','q','map','script','br','basefont','font','object','applet','img','a','acronym','abbr','cite','var','kbd','samp','code','dfn','strong','em','small','big','strike','s','u','b','i','tt','address','fieldset','table','hr','isindex','form','blockquote','noframes','noscript','center','div','dl','pre','menu','dir','ol','ul','h6','h5','h4','h3','h2','h1','p'];
	var HTML=new Class(LooseXML,{
		ignoreWhitespaces:true,
		ignoreCase:true,
		emptyTags:		['area','base','basefont','br','col','hr','img','input','isindex','link','meta','param'],
		emptyAsPair:true,
		dataTags:		['script','style','textarea'],
		allowedChildElements:{
			'head':		['title','isindex','base','script','style','meta','link','object'],
			'option':	[],
			'colgroup':	['col'],
			'tfoot':	['tr'],
			'thead':	['tr'],
			'tbody':	['tr'],
			'tr':		['td','th'],
			'th':		__allElements__,
			'td':		__allElements__,
			'li':		__allElements__,
			'dd':		__allElements__,
			'dt':		__inlineElements__,
			'p':		__inlineElements__,
		},
	});
	
	
	
	
	
	this.ParentMixin=ParentMixin;
	this.LooseXML=LooseXML;
	this.HTML=HTML;
	this.AbstractNode=AbstractNode;
	this.Element=Element;
	this.CData=CData;
	this.Text=Text;
	this.Comment=Comment;
	this.Attribute=Attribute;
	this.Fragment=Fragment;
	
	
})