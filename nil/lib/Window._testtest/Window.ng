(function(){
/*
HWND_MESSAGE 0xFFFFFFFD

#define GW_HWNDFIRST        0
#define GW_HWNDLAST         1
#define GW_HWNDNEXT         2
#define GW_HWNDPREV         3
#define GW_OWNER            4
#define GW_CHILD            5
#if(WINVER <= 0x0400)
#define GW_MAX              5
#else
#define GW_ENABLEDPOPUP     6
#define GW_MAX              6
#endif

#define GWL_WNDPROC         (-4)
#define GWL_HINSTANCE       (-6)
#define GWL_HWNDPARENT      (-8)
#define GWL_STYLE           (-16)
#define GWL_EXSTYLE         (-20)
#define GWL_USERDATA        (-21)
#define GWL_ID              (-12)

#define COLOR_SCROLLBAR         0
#define COLOR_BACKGROUND        1
#define COLOR_ACTIVECAPTION     2
#define COLOR_INACTIVECAPTION   3
#define COLOR_MENU              4
#define COLOR_WINDOW            5
#define COLOR_WINDOWFRAME       6
#define COLOR_MENUTEXT          7
#define COLOR_WINDOWTEXT        8
#define COLOR_CAPTIONTEXT       9
#define COLOR_ACTIVEBORDER      10
#define COLOR_INACTIVEBORDER    11
#define COLOR_APPWORKSPACE      12
#define COLOR_HIGHLIGHT         13
#define COLOR_HIGHLIGHTTEXT     14
#define COLOR_BTNFACE           15
#define COLOR_BTNSHADOW         16
#define COLOR_GRAYTEXT          17
#define COLOR_BTNTEXT           18
#define COLOR_INACTIVECAPTIONTEXT 19
#define COLOR_BTNHIGHLIGHT      20

#define ABSOLUTE            1
#define RELATIVE            2


*/	


	var brushes={
		scrollBar:0,
		background:1,
		activeCaption:2,
		inactiveCaption:3,
		menu:4,
		window:5,
		windwFrame:6,
		menuText:7,
		windowText:8,
		captionText:9,
		activeBorder:10,
		inactiveBorder:11,
		appWorkspace:12,
		highlight:13,
		highlightText:14,
		buttonFace:15,
		butttonShadow:16,
		grayText:17,
		buttonText:18,
		inactiveCaptionText:19,
		buttonHighlight:10,
	};
	var gdi32=WinLibrary.load('gdi32.dll');
	var shell32=WinLibrary.load('shell32.dll');
	var Point=new Struct({x:Int,y:Int});
	var Rect=new Struct({
		left:Int,
		top:Int,
		right:Int,
		bottom:Int
	},{
		get width()this.right-this.left,
		get height()this.bottom-this.top,
	});
	
	var WindowPos=new Struct({
		hwnd:				UInt,
		hwndInsertAfter:	UInt,
		x:					UInt,
		y:					UInt,
		width:				UInt,
		height:				UInt,
		flags:				UInt,
	});
	
	
	var MenuInfo=new Struct({
		size:		UInt,
		mask:		UInt,
		style:		UInt,
		max:		UInt,
		background:	UInt,
		help:		UInt,
		data:		UInt,
	});
	
	var MenuItemInfo=new Struct({
		size:			UInt,
		mask:			UInt,
		type:			UInt,
		state:			UInt,
		id:				UInt,
		subMenu:		UInt,
		bmpChecked:		UInt,
		bmpUnchecked:	UInt,
		itemData:		UInt,
		typeData:		UInt,
		cch:			UInt,
		bmpItem:		UInt,
	});
	
	
	var TPMParams=new Struct({
		size:	UInt,
		left:	Int,
		top:	Int,
		right:	Int,
		bottom:	Int,
	});
	
	var CreateMenu=			user32.proc("CreateMenu",[],Int);
	var SetMenu=			user32.proc("SetMenu",[Int,Int],Int);
	
	var CreatePopupMenu=	user32.proc("CreatePopupMenu",[],Int);
	var SetMenuInfo=		user32.proc('SetMenuInfo',[UInt,MenuInfo],Int);
	var DestroyMenu=		user32.proc("DestroyMenu",[Int],Int);
	var TrackPopupMenuEx=	user32.proc("TrackPopupMenuEx",[Int,Int,Int,Int,Int,TPMParams],Int);
	
	var InsertMenuItem=		user32.proc("InsertMenuItemW",[Int,Int,Int,MenuItemInfo],Int);
	var GetMenuItemInfo=	user32.proc("GetMenuItemInfoW",[Int,Int,Int,MenuItemInfo],Int);
	var DeleteMenu=			user32.proc("DeleteMenu",[Int,Int,Int],Int);
	
	
	var GetSystemMenu=		user32.proc("GetSystemMenu",[Int,Int],Int);
	var GetMenu=			user32.proc("GetMenu",[Int],Int);
	var GetMenuItemCount=	user32.proc("GetMenuItemCount",[Int],Int);
	var ModifyMenu=			user32.proc("ModifyMenuW",[Int,Int,Int,Int,UInt],Int);
	var GetMenuItemRect=	user32.proc("GetMenuItemRect",[Int,Int,Int,Rect],Int);
	var RemoveMenu=			user32.proc("RemoveMenu",[Int,Int,Int],Int);
	
	var DrawMenuBar=	user32.proc("DrawMenuBar",[Int],Int);
	var AppendMenu=	user32.proc("AppendMenuW",[Int,Int,Int,UInt],Int);
	var InsertMenu=			user32.proc("InsertMenuW",[Int,Int,Int,Int,UInt],Int);
	var HiliteMenuItem=	user32.proc("HiliteMenuItem",[Int,Int,Int,Int],Int);
	var CheckMenuItem=	user32.proc("CheckMenuItem",[Int,Int,Int],Int);
	var EnableMenuItem=	user32.proc("EnableMenuItem",[Int,Int,Int],Int);
	var GetSubMenu=	user32.proc("GetSubMenu",[Int,Int],Int);
	var GetMenuString=	user32.proc("GetMenuStringW",[Int,Int,WideString,Int,Int],Int);
	var GetMenuState=	user32.proc("GetMenuState",[Int,Int,Int],Int);
	var GetMenuItemID=	user32.proc("GetMenuItemID",[Int,Int],Int);
	var SetMenuItemBitmaps=	user32.proc("SetMenuItemBitmaps",[Int,Int,Int,Int,Int],Int);
	
	var 
		GetSystemMetrics=		user32.proc('GetSystemMetrics',[Int],Int),
		GetDC=user32.proc('GetDC',[UInt],UInt),
		GetWindowDC=user32.proc('GetWindowDC',[UInt],UInt),
		GetTextColor=gdi32.proc('GetTextColor',[UInt],UInt),
		SetTextColor=gdi32.proc('SetTextColor',[UInt,UInt],UInt);
	
	
	var AbstractMenu=new Class({
		get items(){
		},
		item:function(idx){
		},
		insert:function(info,pos){
		},
		add:function(info){
		},
		remove:function(idx){
		},
		
		
	});
	
	var Menu=new Class(AbstractMenu,{
	});
	var PopupMenu=new Class(AbstractMenu,{
		
	});
	
	var MenuItem=new Class({
		__new__:function(parent,idx,command){
			try{
			}finally{
			}
		},
		
	});
	
	
	
	
	
	
	var NotifyIconData=new Struct({
		size:		UInt,
		hwnd:		UInt,
		id:			UInt,
		flags:		UInt,
		message:	UInt,
		hicon:		UInt,
		tooltip:	[WChar,128],
		state:		UInt,
		mask:		UInt,
		info:		[WChar,256],
		timeout:	UInt,
		infoTitle:	[WChar,64],
		infoFlags:	UInt,
	});
	var Shell_NotifyIcon=		shell32.proc('Shell_NotifyIconW',[UInt,NotifyIconData],Int,0);
	var NotifyIcon=new Class({},EventMixin,{
		__class__:{
			get all(){
				
			},
			plugins:new Pluggable('ShellNotifyIconWrapper'),
			create:function(window,id,opt){
				var _this=(new this(window,id)).register(opt);
				_this.created=opt;
				window.observe('notifyIcon',_this.__windowMainCallback__=function(obj){
					if(obj.wparam==_this.id){
						if(_this.fire(({0x07B:'contextMenu',	0x200:'mouseMove',	0x400:'select',				0x401:'keySelect',
										0x402:'infoShow',		0x403:'infoHide',	0x404:'infoTimeout',		0x405:'infoClick',
										0x201:'lbuttonDown',	0x202:'lbuttonUp',	0x203:'lbuttonDobuleClick',
										0x204:'rbuttonDown',	0x205:'rbuttonUp',	0x206:'rbuttonDoubleClick',
										0x207:'mbuttonDown',	0x208:'mbuttonUp',	0x209:'mbuttonDoubleClick',
										0x406:'popupOpen',		0x407:'popupClose',
						}[obj.lparam]||'other'),Object.extend({},obj)) && (obj.lparam==((_this.version==0)?0x205:0x07B)) && _this.created.contextMenu){
							if(!_this.window.activate().showPopupMenu(_this.created.contextMenu,{modal:true})){
								_this.focus();
							}
						}
						if({0x403:1,0x404:1,0x405:1}[obj.lparam]){
							_this.infoTitle=_this.infoMessage=void(0);
						}
					}
				});
				window.observe('taskbarCreated',	_this.__windowReregisterCallback__=	function(obj)(_this.created && _this.register(_this.created)));
				window.observe('destroy',			_this.__windowDestroyCallback__=		function(obj)(_this.created && _this.free()));
				for each(let [n,v] in Iterator(opt.events||{})){
					_this.observe(n,(typeof(v)=='function')?v:let(c=v)function()(this.executeCommand(c)));
				}
				return(_this);
			},
		},
		__new__:function(window,id){
			this.window=window;
			this.id=id;
		},
		__createStruct__:function(flags){
			var data=NotifyIconData.alloc();
			data.size=936;
			data.hwnd=this.window.handle;
			data.id=this.id;
			data.flags=flags||0;
			return(data);
		},
		register:function(opt){
			try{
				opt=opt||{};
				var {Icon,Image}=require('Image');
				if(opt.icon instanceof Image){
					opt.icon=new Icon(opt.icon.getHICON());
				}else if(typeof(opt.icon)=='number'){
					opt.icon=new Icon(opt.icon,true);
				}else if((opt.icon||{}).handle){
					opt.icon=new Icon(opt.icon.handle,true);
				}else{
					opt.icon=Icon.load(opt.icon);
				}
				var data=this.__createStruct__(0x0F);
				data.message=opt.message||0x408;
				data.hicon=opt.icon.handle;
				data.tooltip.update((opt.text||"").slice(0,127));
				data.state=opt.hidden?0x1:0;
				data.mask=0x1;
				while(true){
					try{
						Shell_NotifyIcon(0,data);
						break;
					}catch(e){
						sleep(20);
					}
				}
				this.version=opt.version||0;
				if(opt.version){
					data.flags=0;
					try{
						data.timeout=this.version;
						if(!Shell_NotifyIcon(4,data)){
							throw({});
						}
					}catch(e){
						try{
							data.timeout=this.version=3;
							if(!Shell_NotifyIcon(4,data)){
								throw({});
							}
						}catch(e){
							this.version=0;
						}
					}
				}
				
				return(this);
			}finally{
				data&&data.free();
			}
		},
		free:function(){
			try{
				if(this.created){
					var data=this.__createStruct__();
					if(Shell_NotifyIcon(2,data)){
						this.created.icon.free();
						this.created=null;
						this.window.unobserve('notifyIcon',		this.__windowMainCallback__);
						this.window.unobserve('taskbarCreated',	this.__windowReregisterCallback__);
						this.window.unobserve('destroy',		this.__windowDestroyCallback__);
					}
				}
				return(this);
			}finally{
				data&&data.free();
			}
		},
		get contextMenu()(this.created && this.created.contextMenu),
		set contextMenu(v)(this.created && (this.created.contextMenu=v)),
		focus:function(){
			try{
				var data=this.__createStruct__();
				Shell_NotifyIcon(3,data);
				return(this);
			}catch(e){
			}finally{
				data&&data.free();
			}
		},
		showInfo:function(msg,title){
			try{
				var data=this.__createStruct__(0x10);
				data.info.update((msg||"").slice(0,255));
				data.infoTitle.update((title||"").slice(0,63));
				if(Shell_NotifyIcon(1,data)){
					this.infoTitle=title;
					this.infoMessage=msg;
				}
				return(this);
			}catch(e){
			}finally{
				data&&data.free();
			}
		},
		
		get icon(){
			if(this.created){
				return(this.created.icon);
			}else{
			}
		},
		set icon(icon){
			try{
				var {Icon,Image}=require('Image');
				
				if(icon instanceof Image){
					icon=new Icon(icon.getHICON());
				}else if(typeof(icon)=='number'){
					icon=new Icon(icon,true);
				}else if((icon||{}).handle){
					icon=new Icon(icon.handle,true);
				}else{
					icon=Icon.load(icon);
				}
				var data=this.__createStruct__(2);
				data.hicon=icon.handle;
				if(Shell_NotifyIcon(1,data)){
					this.created.icon.free();
					this.created.icon=icon;
				}
			}finally{
				data&&data.free();
			}
		},
		
		get text(){
			if(this.created){
				return(this.created.text);
			}else{
			}
		},
		set text(text){
			try{
				var data=this.__createStruct__(4);
				data.tooltip.update((text||"").slice(0,127));
				if(Shell_NotifyIcon(1,data)){
					this.created.text=text;
				}
			}finally{
				data&&data.free();
			}
		},
		
		show:function()(this.visible=true),
		hide:function()(this.visible=false),
		get visible(){
			if(this.created){
				return(!this.created.hidden);
			}else{
			}
		},
		set visible(b){
			try{
				var data=this.__createStruct__(8);
				data.state=b?0:1;
				data.mask=0x1;
				if(Shell_NotifyIcon(1,data)){
					this.created.hidden=!b;
				}
			}finally{
				data&&data.free();
			}
		},
	});
	
	
	
	
	
	
	
	
	var MSG=new Struct({
		hwnd:		UInt,
		message:	UInt,
		wParam:		UInt,
		lParam:		UInt,
		time:		UInt,
		x:			Int,
		y:			Int,
	});
	
	
	var WindowPlacement=new Struct({
		length:		UInt,
		flags:		UInt,
		showCmd:	UInt,
		minPosX:	Int,
		minPosY:	Int,
		maxPosX:	Int,
		maxPosY:	Int,
		left:		Int,
		top:		Int,
		right:		Int,
		bottom:		Int,
	});
	
	var WindowClass=new Struct({
		style:			UInt,
		windowProc:		UInt,
		cbClassExtra:	UInt,
		cbWindowExtra:	UInt,
		hInstance:		UInt,
		hIcon:			UInt,
		hCursor:		UInt,
		hBrush:			UInt,
		hMenu:			UInt,
		className:		WideString,
	});
	
	
	var NotifyMessageHeader=new Struct({
		hwnd:	UInt,
		id:		UInt,
		code:	UInt,
	});
	
	
	var GuiThreadInfo=new Struct({
		size:			UInt,
		flags:			UInt,
		hwndActive:		UInt,
		hwndFocus:		UInt,
		hwndCapture:	UInt,
		hwndMenuOwner:	UInt,
		hwndMoveSize:	UInt,
		hwndCaret:		UInt,
		caretLeft:		UInt,
		caretTop:		UInt,
		caretRight:		UInt,
		caretBottom:	UInt,
	});
	
	
	var Accel=new Struct({
		fVirt:Byte,
		key:UShort,
		cmd:UShort,
	});
	
	
	
	
	
	var EnumWindowsProc=StdCallFunction.define([UInt,Int],Int);
	var WindowProc=StdCallFunction.define([UInt,UInt,UInt,UInt],UInt);
	var DefWindowProc=user32.getCFunction('DefWindowProcW');
	
	var GlobalAlloc=				kernel32.proc('GlobalAlloc',[UInt,UInt],UInt);
	var GlobalLock=					kernel32.proc('GlobalLock',[UInt],UInt);
	var GlobalUnlock=				kernel32.proc('GlobalUnlock',[UInt],Int);
	var GlobalFree=					kernel32.proc('GlobalFree',[UInt],Int);
	var DropFiles=new Struct({
		offset:	UInt,
		x:				Int,
		y:				Int,
		isNonClient:	UInt,
		isWideString:	UInt,
	});
	
	var
		CallWindowProc=			user32.proc('CallWindowProcW',[UInt,UInt,UInt,UInt,UInt],UInt),
		
		RegisterWindowMessage=	user32.proc('RegisterWindowMessageW',[WideString],UInt),
		SendMessageTimeout=		user32.proc('SendMessageTimeoutW',[UInt,UInt,UInt,UInt,UInt,UInt,Pointer],UInt),
		SendMessage=			user32.proc('SendMessageW',[UInt,UInt,UInt,UInt],UInt),
		PostMessage=			user32.proc('PostMessageW',[UInt,UInt,UInt,UInt],UInt),
		SendMessageSigned=		user32.proc('SendMessageW',[UInt,UInt,UInt,UInt],Int),
		MsgWaitForMultipleObjects=user32.proc('MsgWaitForMultipleObjects',[UInt,Pointer,UInt,UInt,UInt],UInt),
		PeekMessage=			user32.proc("PeekMessageW",[Pointer,UInt,UInt,UInt,UInt],Int),
		CreateEvent=			kernel32.proc('CreateEventW',[Pointer,UInt,UInt,WideString],UInt),
		
		GetGUIThreadInfo=		user32.proc('GetGUIThreadInfo',[UInt,Pointer],UInt,0),
		ClientToScreen=			user32.proc('ClientToScreen',[UInt,Pointer],UInt),
		ScreenToClient=			user32.proc('ScreenToClient',[UInt,Pointer],UInt),
		
		CreateAcceleratorTable=	user32.proc('CreateAcceleratorTableW',[Pointer,Int],UInt),
		DestroyAcceleratorTable=user32.proc('DestroyAcceleratorTable',[UInt]),
		TranslateAccelerator=	user32.proc('TranslateAcceleratorW',[UInt,UInt,MSG],Int),
		
		CreateSolidBrush=		gdi32.proc('CreateSolidBrush',[UInt],UInt),
		LoadImage=				user32.proc('LoadImageW',[UInt,WideString,UInt,Int,Int,UInt],UInt),
		DestroyIcon=			user32.proc('DestroyIcon',[UInt],UInt),
		LoadCursor=				user32.proc('LoadCursorW',[UInt,WideString],UInt),
		DeleteObject=			gdi32.proc('DeleteObject',[UInt],Int),
		
		GetStockObject=			gdi32.proc('GetStockObject',[Int],UInt),
		
		GetClassLong=			user32.proc('GetClassLongW',[UInt,Int],UInt),
		GetClassInfo=			user32.proc('GetClassInfoW',[UInt,WideString,Pointer],Int),
		RegisterClass=			user32.proc('RegisterClassW',[Pointer],UInt),
		CreateWindowEx=			user32.proc('CreateWindowExW',[UInt,WideString,WideString,UInt,Int,Int,Int,Int, UInt,UInt,UInt,UInt],UInt),
		
		DragQueryPoint=			shell32.proc('DragQueryPoint',[UInt,Pointer],Int),
		DragQueryFile=			shell32.proc('DragQueryFileW',[UInt,UInt,WideString,UInt],UInt),
		DragFinish=				shell32.proc('DragFinish',[UInt],Int),
		
		GetMessage=				user32.proc("GetMessageW",[MSG,UInt,UInt,UInt],Int,true),
		TranslateMessage=		user32.proc('TranslateMessage',[MSG],Int),
		DispatchMessage=		user32.proc('DispatchMessageW',[MSG],Int),
		IsDialogMessage=		user32.proc('IsDialogMessageW',[UInt,MSG],Int),
		PostQuitMessage=		user32.proc('PostQuitMessage',[UInt],Int),
		
		OpenProcess=			kernel32.proc('OpenProcess',[UInt,UInt,UInt],Int,true),
		CloseHandle=			kernel32.proc('CloseHandle',[Int],Int),
		VirtualAllocEx=			kernel32.proc('VirtualAllocEx',[UInt,UInt,UInt,UInt,UInt],UInt),
		VirtualFreeEx=			kernel32.proc('VirtualFreeEx',[UInt,UInt,UInt,UInt],UInt),
		ReadProcessMemory=		kernel32.proc('ReadProcessMemory',[UInt,UInt,UInt,UInt,UInt],UInt,true),
		WriteProcessMemory=		kernel32.proc('WriteProcessMemory',[UInt,UInt,UInt,UInt,UInt],UInt),
		
		GetParent=				user32.proc('GetParent',[UInt],UInt),
		GetAncestor=			user32.proc('GetAncestor',[UInt,UInt],UInt),
		
		GetWindow=				user32.proc('GetWindow',[UInt,UInt],UInt),
		GetWindowLong=			user32.proc('GetWindowLongW',[UInt,Int],UInt),
		SetWindowLong=			user32.proc('SetWindowLongW',[UInt,Int,UInt],UInt),
		
		EnableWindow=			user32.proc('EnableWindow',[UInt,Int],Int),
		
		SetLayeredWindowAttributes=	user32.proc('SetLayeredWindowAttributes',[UInt,UInt,Byte,UInt],UInt),
		GetLayeredWindowAttributes=	user32.proc('GetLayeredWindowAttributes',[UInt,Pointer,Pointer,Pointer],UInt),
		
		GetWindowThreadProcessId=	user32.proc('GetWindowThreadProcessId',[UInt,Pointer],UInt),
		
		GetClassName=			user32.proc('GetClassNameW',[UInt,WideString,UInt],Int),
		
		
		DeferWindowPos=			user32.proc('DeferWindowPos',[UInt,UInt,UInt,Int,Int,Int,Int,UInt],Int),
		BeginDeferWindowPos=	user32.proc('BeginDeferWindowPos',[Int],UInt),
		EndDeferWindowPos=		user32.proc('EndDeferWindowPos',[UInt],Int),
		
		
		FindWindowEx=			user32.proc('FindWindowExW',[UInt,UInt,WideString,WideString],UInt,true),
		
		WindowFromPoint=		user32.proc('WindowFromPoint',[Int,Int],UInt),
		GetWindowRect=			user32.proc('GetWindowRect',[UInt,Rect],Int),
		GetClientRect=			user32.proc('GetClientRect',[UInt,Rect],Int),
		SetWindowPos=			user32.proc('SetWindowPos',[UInt,UInt,Int,Int,Int,Int,UInt],Int),
		ShowWindow=				user32.proc('ShowWindow',[UInt,Int],UInt),
		ShowWindowAsync=		user32.proc('ShowWindowAsync',[UInt,Int],UInt),
		
		GetWindowPlacement=		user32.proc('GetWindowPlacement',[UInt,Pointer],UInt),
		
		AttachThreadInput=		user32.proc('AttachThreadInput',[UInt,UInt,Int],Int),
		GetCurrentThreadId=		kernel32.proc('GetCurrentThreadId',[],UInt),
		SystemParametersInfo=	user32.proc('SystemParametersInfoW',[UInt,UInt,UInt,UInt],UInt),
		
		GetFocus=				user32.proc('GetFocus',[],UInt),
		SetFocus=				user32.proc('SetFocus',[UInt],UInt),
		SetForegroundWindow=	user32.proc('SetForegroundWindow',[UInt],UInt),
		GetForegroundWindow=	user32.proc('GetForegroundWindow',[],UInt),
		EnumThreadWindows=		user32.proc('EnumThreadWindows',[UInt,EnumWindowsProc,UInt],Int),
		EnumChildWindows=		user32.proc('EnumChildWindows',[UInt,EnumWindowsProc,UInt],Int),
		EnumWindows=			user32.proc('EnumWindows',[EnumWindowsProc,UInt],Int),
		
		
		IsWindowVisible=		user32.proc('IsWindowVisible',[UInt],Int),
		GetWindowTextLength=	user32.proc('GetWindowTextLengthW',[UInt],Int),
		GetWindowText=			user32.proc('GetWindowTextW',[UInt,WideString,UInt],Int),
		SetWindowText=			user32.proc('SetWindowTextW',[UInt,WideString],Int),
		
		IsWindow=				user32.proc('IsWindow',[UInt],Int);
	
	
	
	var WM_REQUESTFORTHREAD=		RegisterWindowMessage("REQUESTFORTHREAD");
	
	
	var WindowClasses={"":[]};
	
	var SelectWindowClass=function(hwnd,className){
		if(!className){
			try{
				var cn=WChar.alloc(256);
				GetClassName(hwnd,cn,256);
				className=cn.toString();
			}finally{
				cn&&cn.free();
			}
		}
		var c=WindowClasses[""].concat(WindowClasses[className]||[]);
		for(var i=c.length-1;i>=0;i--){
			var res=new (c[i])(hwnd);
			if(res.valid){
				return(res);
			}
		}
	};
	
	var AlignChild=function(w,h,o){
		var r={};
		if(typeof(o.r)!='undefined'){
			if(typeof(o.l)!='undefined'){
				r.x=o.l;
				r.w=w-o.r-o.l;
			}else{
				r.x=w-o.r-o.w;
				r.w=o.w;
			}
		}
		if(typeof(o.b)!='undefined'){
			if(typeof(o.t)!='undefined'){
				r.y=o.t;
				r.h=h-o.b-o.t;
			}else{
				r.y=h-o.b-o.h;
				r.h=o.h;
			}
		}
		return(r);
	};
	
	var Font=new Class({
		__new__:function(handle){
			this.handle=handle;
		},
	});
	
	
	var AbstractWindow=new Class({},EventMixin,CommandReceiverMixin,{
		__class__:{
			style:0,
			exStyle:0,
			exStyles:{
				dlgModalFrame:	0x00000001,
				noParentNotify:	0x00000004,
				topMost:		0x00000008,
				acceptFiles:	0x00000010,
				transparent:	0x00000020,
				mdiChild:		0x00000040,
				toolWindow:		0x00000080,
				windowEdge:		0x00000100,
				clientEdge:		0x00000200,
				contextHelp:	0x00000400,
				alignRight:		0x00001000,
				rtlReading:		0x00002000,
				leftScrollBar:	0x00004000,
				controlParent:	0x00010000,
				staticEdge:		0x00020000,
				appWindow:		0x00040000,
				layerd:			0x00080000,
				noInheritLayout:0x00100000,
				layoutRTL:		0x00400000,
				composited:		0x02000000,
				noActivate:		0x08000000,
			},
			styles:{
				isPopupWindow:	0x80000000,
				isChildWindow:	0x40000000,
				visible:		0x10000000,
				disabled:		0x08000000,
				clipSiblings:	0x04000000,
				clipChildren:	0x02000000,
				hasBorder:		0x00800000,
				hasDlgFrame:	0x00400000,
				hasVScroll:		0x00200000,
				hasHScroll:		0x00100000,
			},
			
			properties:{
				graphics:void(0),
			},
			messages:{},
			messageNames:{},
			commands:{},
			commandNames:{},
			notifications:{},
			notificationNames:{},
			accelerators:{},
			events:{},
			children:{},
			
			texts:{},
			menu:null,
			contextMenu:null,
			accelerator:null,
			notifyIcon:null,
			background:"background",
			icon:0,
			width:640,
			height:480,
			title:'',
			
			define:function(opt){
				var members={__class__:{__firstInstances__:{}}};
				opt.validator	&&	(members.__defineGetter__('valid',opt.validator));
				opt.className	&&	(members.__class__.className=	opt.className);
				opt.menu		&&	(members.__class__.menu=		opt.menu);
				opt.contextMenu	&&	(members.__class__.contextMenu=	opt.contextMenu);
				opt.font		&&	(members.__class__.font=		opt.font);
				opt.icon		&&	(members.__class__.icon=		opt.icon);
				opt.notifyIcon	&&	(members.__class__.notifyIcon=	opt.notifyIcon);
				('background' in opt)	&&	(members.__class__.background=	opt.background);
				opt.width		&&	(members.__class__.width=		opt.width);
				opt.height		&&	(members.__class__.height=		opt.height);
				opt.title		&&	(members.__class__.title=		opt.title);
				
				('isDialog' in opt)	&&	(members.__class__.isDialog=opt.isDialog);
				('messageOnly' in opt)	&& (members.__class__.messageOnly=opt.messageOnly);
				//TODO: background,cursor
				
				if(opt.children){
					var cw={}, cn={};
					for each(let [n,v] in Iterator(this.children)){
						cn[v.type.className]=(cn[v.type.className]||0)+1;
						cw[n]=v;
					}
					for each(let [N,v] in Iterator(opt.children)){
						let n=N;
						if(v.className){
							v={type:v};
						}
						let name=v.type.className;
						let idx=('index' in v)?v.index:(cn[name]||0);
						members.__defineGetter__(n,function()((this.__children__||(this.__children__={}))[n]||(this.__children__[n]=this.child(name,idx))));
						cn[name]=idx+1;
						cw[n]=v;
					}
					members.__class__.children=cw;
				}
				
				if(opt.styles){
					var s={},sn={};
					for each(let [n,v] in Iterator(opt.styles)){
						s[sn[v]=n]=v;
					}
					for each(let [n,v] in Iterator(this.styles)){
						if(!sn[v]){
							s[n]=v;
						}
					}
					members.__class__.styles=s;
					for each(let [n,V] in Iterator(opt.styles)){
						let v=V;
						if(v>0){
							members.__defineGetter__(n,function()((this.style&v)==v));
							members.__defineSetter__(n,function(b)(this.style=b?(this.style|v):(this.style&(~v))));
						}else{
							v=-V;
							members.__defineGetter__(n,function()((this.style&v)!=v));
							members.__defineSetter__(n,function(b)(this.style=b?(this.style&(~v)):(this.style|v)));
						}
					}
				}
				if(opt.properties){
					var p={};
					for each(let [n,v] in Iterator(this.properties)){
						p[n]=v;
					}
					for each(let [n,v] in Iterator(opt.properties)){
						p[n]=v;
					}
					members.__class__.properties=p;
				}
				var st=0;
				for each(let [n,v] in Iterator(members.__class__.styles||this.styles||{})){
					if(n in opt){
						members.__class__[n]=opt[n];
						st|=opt[n]?((v>0)?v:0):((v>0)?0:(-v));
					}else{
						st|=this[n]?((v>0)?v:0):((v>0)?0:(-v));
					}
				}
				members.__class__.style=st;
				
				var xs=0;
				for each(let [n,v] in Iterator(this.exStyles)){
					if(n in opt){
						members.__class__[n]=opt[n];
						xs|=opt[n]?((v>0)?v:0):((v>0)?0:(-v));
					}else{
						xs|=this[n]?((v>0)?v:0):((v>0)?0:(-v));
					}
				}
				members.__class__.exStyle=xs;
				
				if(opt.messages){
					var m={}, mn={};
					for each(let [n,v] in Iterator(this.messages)){
						mn[m[n]=v]=n;
					}
					for each(let [n,v] in Iterator(opt.messages)){
						mn[m[n]=(typeof(v)=='number')?v:RegisterWindowMessage(v)]=n;
					}
					members.__class__.messages=m;
					members.__class__.messageNames=mn;
				}
				var c={}, cn={},cmds={};
				if(opt.commands){
					for each(let [n,v] in Iterator(this.commands)){
						cn[c[n]=v]=n;
					}
					for each(let [n,V] in Iterator(opt.commands)){
						if(typeof(V)=='number'){
							let v=V;
							members[n]=function()(this.send(0x111,v,0));
							cn[c[n]=V]=n;
						}else{
							cmds[n]=v;
						}
					}
					members.__class__.commands=c;
					members.__class__.commandNames=cn;
				}
				if(opt.notifications){
					var n={}, nn={};
					for each(let [N,v] in Iterator(this.notifications)){
						nn[n[N]=v]=N;
					}
					for each(let [N,v] in Iterator(opt.notifications)){
						nn[n[N]=v]=N;
					}
					members.__class__.notifications=n;
					members.__class__.notificationNames=nn;
				}
				if(opt.events){
					let e={};
					for each(let [n,v] in Iterator(this.events)){
						e[n]=v;
					}
					for each(let [n,v] in Iterator(opt.events)){
						if(e[n]){
							if(e[n] instanceof Array){
								e[n].push(v);
							}else{
								e[n]=[e[n],v];
							}
						}else{
							e[n]=v;
						}
					}
					members.__class__.events=e;
				}
				if(opt.accelerators){
					members.__class__.accelerators=Object.extend(Object.extend({},this.accelerators),opt.accelerators);
				}
				if(opt.texts){
					members.__class__.texts=Object.extend(Object.extend({},this.texts),opt.texts);
				}
				var klass=new Class(this,members);
				(WindowClasses[opt.className||this.className||""]||(WindowClasses[opt.className||this.className||""]=[])).push(klass);
				klass.addCommands(cmds);
				return(klass);
			},
			create:function(opt){
				try{
					var className=this.className||'NIL_AnonymousWindowClass';
					opt=(typeof(opt)=='string')?{text:opt}:(opt||{});
					var inf=WindowClass.alloc(), buf;
					if(!(GetClassInfo(0,className,inf) || GetClassInfo(Main.handle,className,inf))){
						inf.className=(buf=WideString.from(className));
						inf.style=0x2B;
						inf.windowProc=DefWindowProc.valueOf();
						inf.hInstance=Main.handle;
						inf.hIcon=this.icon?this.icon.handle:0;
						inf.hCursor=this.cursor?this.cursor.handle:LoadCursor(0,new WideString(32512));
						inf.hBrush=brushes[this.background]||((typeof(this.background)=='number')?(brushes[this.background]=CreateSolidBrush(this.background)):1);
						inf.hMenu=this.menu?this.menu.handle:0;
						if(!RegisterClass(inf)){
							throw("window error: registering window class failed");
						}
					}
					opt.texts=Object.extend(Object.extend({},this.texts),opt.texts||{});
					var title=('title' in opt)?opt.title:(('text' in opt)?opt.text:(this.title||this.text||""));
					var parent=(this.messageOnly)?0xFFFFFFFD:(('parent' in opt)?opt.parent.handle:0);
					var id=opt.controlID;
					var style=0, exStyle=0, x, y, width, height;
					for each(let [n,v] in Iterator(this.styles)){
						style|=(n in opt)?(opt[n]?((v>0)?v:0):((v>0)?0:-v)):(this.style&Math.abs(v));
					}
					for each(let [n,v] in Iterator(this.exStyles)){
						exStyle|=(n in opt)?(opt[n]?((v>0)?v:0):((v>0)?0:-v)):(this.exStyle&Math.abs(v));
					}
					var x=opt.left||opt.x||0, y=opt.top||opt.y||0, width=('width' in opt)?opt.width:this.width, height=('height' in opt)?opt.height:this.height;
					var w,err;
					var CREATE=function(klass){
						var res=new klass(CreateWindowEx(exStyle, className, title, style, x, y, width, height, parent, id, Main.handle, 0));
						res.__owned__=true;
						res.isDialog=('isDialog' in opt)?opt.isDialog:klass.isDialog;
						SendMessage(res.handle,0x30,(opt.font||klass.font||new Font(GetStockObject(17))).handle,1);
						res.contextMenu=opt.contextMenu||klass.contextMenu;
						res.texts=opt.texts;
						for each(let [n,v] in Iterator(klass.children)){
							if(n in opt.texts){
								v.text=(opt.texts||{})[n]||(this.texts||{})[n]||v.text;
							}
							res[n]=res.appendChild(n,v.type,v);
						}
						for each(let [n,v] in Iterator(opt.children||{})){
							if(n in opt.texts){
								v.text=opt.texts[n];
							}
							res[n]=res.appendChild(n,v.type,v);
						}
						return(res);
					}
					if(opt.parent){
						w=CREATE(this);
						if(('right' in opt)||('bottom' in opt)){
							w.align={x:x,y:y,w:width,h:height, l:opt.left, t:opt.top, r:opt.right, b:opt.bottom};
						}
						w.__root__=opt.parent.root;
					}else{
						var sig=new Signal();
						var thread=Thread.create(function(klass){
							try{
								var sent;
								w=CREATE(klass);
								w.__threadRequests__={};
								w.replaceWindowProc();
								Main.reside();
								if(style&AbstractWindow.styles.isPopupWindow){
									w.send(5,0,(w.clientHeight<<16)|w.clientWidth);
								}
								sig.turnOn();
								sent=true;
								var msg=MSG.alloc();
								
								/*
								var sig2=new Signal();
								var ary=UInt.alloc().update(sig2.handle);
								while(msg.message!=0x12){
									MsgWaitForMultipleObjects(1,ary,0,0xFFFFFFFF,0x4FF);
									while(PeekMessage(msg,0,0,0,1) && (msg.message!=0x12)){
										if(w.handle!=msg.hwnd){
											println([msg.hwnd,msg.message]);
										}
										if((msg.hwnd!=0) && !(w.__acceleratorHandle__ && TranslateAccelerator(w.handle,w.__acceleratorHandle__,msg))&&!(w.isDialog && IsDialogMessage(w.handle,msg))){
											TranslateMessage(msg);
											DispatchMessage(msg);
										}
									}
								}
								sig2&&sig2.free();
								ary&&ary.free();
								*/
								
								while(true){
									try{
										if(GetMessage(msg,0,0,0)<=0){
											break;
										}
									}catch(e if(e&&(e.result>=1))){
									}
									try{
										var win=(w.handle==msg.hwnd)?w:(w.__childByHandle__[msg.hwnd]||new Window(msg.hwnd));
										var obj={window:msg.hwnd?win:void(0), message:msg.message,wparam:msg.wParam,lparam:msg.lParam,struct:msg};
										if(w.__childByHandle__[msg.hwnd]){
											var name=(win.constructor.messageNames||{})[obj.message];
											if(name && !win.fire(name,obj)){
												continue;
											}
										}
										if(!w.fire('message',obj)){
											continue;
										}
									}catch(e){
									}
									if((msg.hwnd!=0)&&!(w.__acceleratorHandle__ && TranslateAccelerator(w.handle,w.__acceleratorHandle__,msg))&&!(w.isDialog && IsDialogMessage(w.handle,msg))){
										TranslateMessage(msg);
										DispatchMessage(msg);
									}
								}
							}catch(e){
//								println(e);
								err=e;
							}finally{
								Main.unreside();
								!sent && sig.turnOn();
								msg && msg.free();
								if(w.exists){
									w.restoreWindowProc();
								}
								w.__removeFirstInstance__();
							}
						},[this]);
						sig.wait();
						if(!w){
							throw(err||new Error('failed to create window'));
						}
						Main.observe('exit',function(){
							w.free();
							while(w.ownerThread){
								sleep(10);
							}
						});
						w.addCommands(opt.commands||{});
						w.mapAccelerators(Object.extend(Object.extend({},this.accelerators),opt.accelerators));
						if(opt.menu||this.menu){
							var hmenu=CreateMenu();
							w.initializeMenu(hmenu,opt.menu||this.menu);
							SetMenu(w.handle,hmenu);
						}
						if(opt.notifyIcon||this.notifyIcon){
							w.addNotifyIcon(opt.notifyIcon||this.notifyIcon);
						}
						w.__root__=w;
					}
					for each(let [n,v] in Iterator(this.properties)){
						if(n in opt){
							w[n]=opt[n];
						}else if(typeof(v)!='undefined'){
							w[n]=v;
						}
					}
					for each(let [n,v] in Iterator(this.events)){
						w.observe(n,v);
					}
					for each(let [n,v] in Iterator(opt.events||{})){
						w.observe(n,v);
					}
					w.fire('create');
					return(w);
				}finally{
					inf && inf.free();
					buf && buf.free();
					sig&&sig.free();
				}
			},
			get focused(){
				var focused=GetFocus();
				if(!focused){
					var tid1=GetCurrentThreadId();
					var tid2=GetWindowThreadProcessId(GetForegroundWindow(),null);
					if(tid1!=tid2){
						var att=AttachThreadInput(tid1,tid2,1);
						focused=GetFocus();
						if(att){
							AttachThreadInput(tid1,tid2,0);
						}
					}
				}
				var w=new this(focused);
				return(w);
			},
		},
		addTexts:function(obj)(this.texts=Object.extend(this.texts||{},obj||{})),
		replaceWindowProc:function()(let(w=this)(w.__oldWindowProc__=SetWindowLong(w.handle,-4,(w.__windowProc__=WindowProc.from(w.__windowProcOriginal__=function(hwnd,msg,wp,lp)(w.__windowProcMain__(hwnd,msg,wp,lp)))).valueOf()))),
		restoreWindowProc:function()(this.__windowProc__&&(SetWindowLong(w.handle,-4,w.__oldWindowProc__),this.__windowProc__.free())),
		__windowProcMain__:function(hwnd,msg,wp,lp){
			var w=this,klass=this.constructor;
			try{
				var name,child, obj={window:w,wparam:wp,lparam:lp};
				switch(msg){
					case(WM_REQUESTFORTHREAD):{
						if(typeof(this.__threadRequests__[wp])=='function'){
							this.__threadRequests__[wp]=this.__threadRequests__[wp].apply(this);
							sleep(0);
						}
						return(0);
					}case(0x02):{
						this.fire('destroy',obj);
						PostQuitMessage(0);
						break;
					}case(0x7):{
						if(w.__lastFocusedControl__ && (w.handle==GetFocus())){
							SetFocus(w.__lastFocusedControl__);
						}
						w.__lastFocusedControl__=0;
						break;
					}case(0x111):{
						if(lp?((child=w.root.__childByHandle__[lp]) && (name=let(nn=child.constructor.notificationNames)(nn[wp>>16]||nn[-(wp>>16)])) && !child.fire(name,obj)):w.executeCommand(wp&0xFFFF)){
							return(0);
						}
						break;
					}case(0x112):{
						if((name={0xF020:'scMinimize',0xF030:'scMaximize',0xF060:'scClose',0xF120:'scRestore',0xF140:'scScreensave',0xF170:'scMonitorPower'}[wp] && !w.fire(name,obj)) || !w.fire('sysCommand',obj)){
							return(0);
						}
						break;
					}case(0x7B):{
						if(w.contextMenu){
							var opt;
							if(lp==0xFFFFFFFF){
								try{
									var r=Rect.alloc();
									GetWindowRect(wp,r);
									opt={x:r.left,y:r.top};
								}finally{
									r && r.free();
								}
							}else{
								var m=require('Mouse').Mouse;
								opt={x:m.x,y:m.y};
							}
							w.__lastFocusedControl__=wp;
							w.showPopupMenu(w.contextMenu,opt);
						}
						break;
					}case(0x117):{
						if(lp>>16){
							w.fire('initSysMenu',{menu:new PopupMenu(wp)});
						}else if(w.__popupMenuCommands__ && w.__popupMenuCommands__[wp]){
							w.initializeMenu(wp,w.__popupMenuCommands__[wp]);
						}
						break;
					}case(0x233):{
						try{
							var s=512, buf=WChar.alloc(s), l=DragQueryFile(wp,0xFFFFFFFF,null,0), a=new Array(l);
							for(var i=0;i<l;i++){
								if(DragQueryFile(wp,i,null,0)>s){
									s=s*2;
									buf.free();
									buf=WChar.alloc(s);
								}
								DragQueryFile(wp,i,buf,s-1);
								a[i]=new File(buf.toString());
								if(!a[i].exists){
									a[i]=new Directory(buf.toString());
								}
							}
							var point=Point.alloc();
							DragQueryPoint(wp,point);
							w.fire('dropFiles',{files:a,x:point.x,y:point.y});
							return(0);
						}finally{
							DragFinish(wp);
							buf&&buf.free();
							point&&point.free();
						}
						break;
					}case(0x4E):{
						var hdr=new NotifyMessageHeader(lp);
						if((child=w.root.__childByHandle__[hdr.hwnd]) && (name=child.constructor.notificationNames[hdr.code]) && !child.fire(name,obj)){
							return(obj.result||0);
						}
						break;
					}case(0x05):{
						var width=lp&0xFFFF, height=lp>>16, h=BeginDeferWindowPos(w.__childCount__||1);
						if(w.fire(({0:this.__maximizedOrMinimized__?'restore':'resize',1:'minimize',2:'maximize',3:"maxShow",4:'maxHide'})[wp],{width:width,height:height})){
							for each(let c in w.__children__){
								if('align' in c){
									let a=c.align, b=AlignChild(width,height,a);
									h=DeferWindowPos(h, c.handle, 0, (typeof(a.r)!='undefined')?b.x:a.x, (typeof(a.b)!='undefined')?b.y:a.y,(typeof(a.r)!='undefined')?b.w:a.w, (typeof(a.b)!='undefined')?b.h:a.h, 0x254);
								}
							}
							EndDeferWindowPos(h);
						}
						this.__maximizedOrMinimized__=(wp!=0);
						break;
					}case(0x03):{
						this.fire('move',{x:(lp&0xFFFF)-((lp&0x8000)?0x10000:0), y:(lp>>16)-((lp>0x80000000)?0x10000:0)});
						break;
					}case(0x06):{
						if(wp==0){
							this.fire('deactivate');
						}else{
							this.fire("activate",{clicked:!!(wp==2)});
						}
						break;
					}case(0x14):{
						if(this.graphics){
							return(1);
						}
						break;
					}case(0x0F):{
						if(this.graphics){
							this.graphics.drawTo(this);
						}
						break;
					}case(0x100):case(0x104):{
						if(!w.fire('keyDown',let(vk=wp,sc=(lp>>16)&0x1FF)({
							get key(){
								if(!this.__key__){
									this.__key__=new (require('Keyboard').Key)(vk,sc);
								}
								return(this.__key__);
							},
							system:msg==0x104,
							repeated:!!(lp&0x40000000),
						}))){
							return(0);
						}
						break;
					}case(0x101):case(0x105):{
						if(!w.fire('keyUp',let(vk=wp,sc=(lp>>16)&0x1FF)({
							get key(){
								if(!this.__key__){
									this.__key__=new (require('Keyboard').Key)(vk,sc);
								}
								return(this.__key__);
							},
							system:msg==0x105,
						}))){
							return(0);
						}
						break;
					}case(0x200):case(0x201):case(0x202):case(0x203):case(0x204):case(0x205):case(0x206):case(0x207):case(0x208):case(0x209):case(0x20B):case(0x20C):case(0x20D):{
						if(!w.fire(({
							0x200:'mouseMove',
							0x201:'lbuttonDown',
							0x202:'lbuttonUp',
							0x203:'lbuttonDoubleClick',
							0x204:'rbuttonDown',
							0x205:'rbuttonUp',
							0x206:'rbuttonDoubleClick',
							0x207:'mbuttonDown',
							0x208:'mbuttonUp',
							0x209:'mbuttonDoubleClick',
							0x20A:(wp&0x80000000)?'wheelDown':'wheelUp',
							0x20B:(wp&0x00010000)?'x1buttonDown':'x2buttonDown',
							0x20C:(wp&0x00010000)?'x1buttonUp':'x2buttonUp',
							0x20D:(wp&0x00010000)?'x1buttonDoubleClick':'x2buttonDoubleClick',
							0x20E:(wp&0x80000000)?'tiltLeft':'tiltRight',
						})[msg],{
							client:true,
							shift:!!(wp&0x04),
							control:!!(wp&0x08),
							lbutton:!!(wp&0x01),
							mbutton:!!(wp&0x10),
							rbutton:!!(wp&0x02),
							x1button:!!(wp&0x20),
							x2button:!!(wp&0x40),
							x:((lp&0xFFFF)-((lp&0x8000)?0x10000:0))-(((msg==0x20A)||(msg==0x20E))?(this.x-this.clientLeft):0),
							y:(lp>>16)-((lp&0x80000000)?0x10000:0)-(((msg==0x20A)||(msg==0x20E))?(this.y-this.clientTop):0),
						})){
							return(0);
						}
						break;
					}case(0x20A):case(0x20E):{
						try{
							var mousePos=Point.alloc();
							mousePos.x=(lp&0xFFFF)-((lp&0x8000)?0x10000:0);
							mousePos.y=(lp>>16)-((lp&0x80000000)?0x10000:0);
							ScreenToClient(this.handle,mousePos);
							if(!w.fire(({
								0x20A:(wp&0x80000000)?'wheelDown':'wheelUp',
								0x20E:(wp&0x80000000)?'tiltLeft':'tiltRight',
							})[msg],{
								shift:!!(wp&0x04),
								control:!!(wp&0x08),
								lbutton:!!(wp&0x01),
								mbutton:!!(wp&0x10),
								rbutton:!!(wp&0x02),
								x1button:!!(wp&0x20),
								x2button:!!(wp&0x40),
								x:mousePos.x,y:mousePos.y,
								count:Math.abs(((wp>>>16)-((wp&0x80000000)?0x10000:0))/120),
							})){
								return(0);
							}
						}catch(e){
							println(e);
						}finally{
							free(mousePos);
						}
						break;
					}case(0xA0):case(0xA1):case(0xA2):case(0xA3):case(0xA4):case(0xA5):case(0xA6):case(0xA7):case(0xA8):case(0xA9):case(0xAB):case(0xAC):case(0xAD):{
						try{
						if(!w.fire(({
							0xA0:'mouseMove',
							0xA1:'lbuttonDown',
							0xA2:'lbuttonUp',
							0xA3:'lbuttonDoubleClick',
							0xA4:'rbuttonDown',
							0xA5:'rbuttonUp',
							0xA6:'rbuttonDoubleClick',
							0xA7:'mbuttonDown',
							0xA8:'mbuttonUp',
							0xA9:'mbuttonDoubleClick',
							0xAB:(wp&0x00010000)?'x1buttonDown':'x2buttonDown',
							0xAC:(wp&0x00010000)?'x1buttonUp':'x2buttonUp',
							0xAD:(wp&0x00010000)?'x1buttonDoubleClick':'x2buttonDoubleClick',
						})[msg],{
							client:false,
							part:({
								"-1":"transparent",
								0:"nowhere",
								1:"client",
								2:"caption",
								3:"sysMenu",
								4:"size",
								5:"menu",
								6:"hScroll",
								7:"vScroll",
								8:"minButton",
								9:"maxButton",
								10:"left",
								11:"right",
								12:"top",
								13:"topLeft",
								14:"topRight",
								15:"bottom",
								16:"bottomLeft",
								17:"bottomRight",
								18:"border",
								19:"object",
								20:"close",
								21:"help",
							})[wp&0xFFFF],
							x:((lp&0xFFFF)-((lp&0x8000)?0x10000:0))-this.x,y:(lp>>16)-((lp&0x80000000)?0x10000:0)-this.y,
						})){
							return(0);
						}
						}catch(e){
							println(e);
						}
						break;
					}case(0x84):{
						var param={x:((lp&0xFFFF)-((lp&0x8000)?0x10000:0))-this.x,y:(lp>>16)-((lp&0x80000000)?0x10000:0)-this.y};
						if(!w.fire('hitTest',param)){
							return(({
								transparent:-1,
								nowhere:0,
								client:1,
								caption:2,
								sysMenu:3,
								size:4,
								menu:5,
								hScroll:6,
								vScroll:7,
								minButton:8,
								maxButton:9,
								left:10,
								right:11,
								top:12,
								topLeft:13,
								topRight:14,
								bottom:15,
								bottomLeft:16,
								bottomRight:17,
								border:18,
								object:19,
								close:20,
								help:21,
							})[param.result]||0);
						}
						break;
					}default:{
						if((name=(klass.messageNames[msg]||(klass.messageOnly&&msg))) && (!w.fire(name,obj))){
							return(obj.result||0);
						}
						wp=obj.wparam;
						lp=obj.lparam;
						break;
					}
				}
				return(CallWindowProc(w.__oldWindowProc__,hwnd,msg,wp,lp));
			}catch(e){
//				println(e);
			}
		},
		
		
		__new__:function(handle){
			this.__instanceIdentifier__=this.handle=handle;
		},
		initialize:function(){},
		appendChild:function(name,type,option){
			var w=type.create(Object.extend({parent:this},option));
			var r=this.root;
			w.__parentWindow__=this;
			(this.__children__||(this.__children__={}))[name]=w;
			(r.__childByHandle__||(r.__childByHandle__={}))[w.handle]=w;
			r.__childCount__=(r.__childCount__||0)+1;
			return(w);
		},
		
		focus:function(name,idx){
			var w=name?((typeof(idx)=='undefined')?this[name]:this.child(name,idx)):this;
			if(w){
				if(!SetFocus(w.handle)){
					var tid1=GetCurrentThreadId();
					var tid2=GetWindowThreadProcessId(w.handle,null);
					if(tid1!=tid2){
						var att=AttachThreadInput(tid1,tid2,1);
						w.send(0);
						SetFocus(w.handle);
						w.send(0);
						if(att){
							AttachThreadInput(tid1,tid2,0);
						}
					}
				}
			}
			return(this);
		},
		
		get caret(){
			try{
				var inf=GuiThreadInfo.alloc();
				inf.size=48;
				GetGUIThreadInfo(this.ownerThread.id,inf);
				var h=inf.hwndCaret;
				if(h&& (GetAncestor(this.handle,2)==GetAncestor(h,2))){
					var p=new (UInt.pointer)(inf.valueOf());
					ClientToScreen(h,p.inc(8));
					ClientToScreen(h,p.inc(10));
					return({x:inf.caretLeft,y:inf.caretTop, width:inf.caretRight-inf.caretLeft, height:inf.caretBottom-inf.caretTop});
				}
			}finally{
				inf && inf.free();
			}
			
		},
		
		get valid()(this.handle!=0),
		get exists()(0!=IsWindow(this.handle)),
		beginUpdate:function()(this.send(0x000B,0,0)),
		endUpdate:function()(this.send(0x000B,1,0)),
		
		post:function(msg,wp,lp){
			if(typeof(msg)!='number'){
				msg=this.constructor.messages[msg]||0;
			}
			PostMessage(this.handle,msg,wp,lp);
			return(this);
		},
		
		sendKeys:function(){
			var delay=typeof(arguments[arguments.length-1])=='number'?arguments[arguments.length-1]:0;
			for(var i=0,l=arguments.length;i<l;i++){
				var s=(new (require('Hotstrokes').Strokes)(arguments[i]));
				var Key=require('Keyboard').Key;
				var mods=[];
				var alt=(typeof(arguments[i])=='string')&&arguments[i].match(/^alt/i);
				var active=this.root.active;
				for each(let [n,v] in Iterator(s.beforeModifiers)){
					var vk=({0xa2:0x11,0xa4:0x12,0xa0:0x10})[n&0xFF]||n&0xFF;
					var key=new Key(vk,n>>16);
					var state=key.state;
					if(state!=v){
						mods.unshift([vk,n|0x1FF00,key,state]);
						if(v){
							key.down();
							if(!active){
								this.post(alt?0x104:0x100,vk,(n|0x1FF00)|0x00000001);
							}
						}else{
							key.up();
							if(!active){
								this.post(alt?0x105:0x101,vk,(n|0x1FF00)|0xC0000001);
							}
						}
					}
					if(delay){
						sleep(delay);
					}
				}
				for(var i=0,a=s.strokes,l=a.length;i<l;i++){
					if(delay){
						sleep(delay);
					}else if(i in s.intervals){
						sleep(Math.abs(s.intervals[i]));
					}
					var m=({0xa2:0x11,0xa4:0x12,0xa0:0x10})[a[i].id&0xFF];
					if(m){
						var key=new Key(m,a[i].id&0x01FF0000);
						if(a[i].up){
							key.up();
						}else{
							key.down();
						}
						if(!active){
							this.post(a[i].up?(alt?0x105:0x101):(alt?0x104:0x100), m||a[i].id&0xFF, (a[i].id&0x01FF0000)|(a[i].up?0xC0000001:0x1));
						}
					}else{
						this.post(a[i].up?(alt?0x105:0x101):(alt?0x104:0x100), a[i].id&0xFF, (a[i].id&0x01FF0000)|(a[i].up?0xC0000001:0x1));
					}
				}
				if(s.strokes.length in s.intervals){
					sleep(Math.abs(s.intervals[s.strokes.length]));
				}
				if(delay){
					sleep(delay);
				}
				for(var i=0,l=mods.length;i<l;i++){
					if(mods[i][3]){
						mods[i][2].down();
						if(!active){
							this.post(0x100,mods[i][0],mods[i][1]|0x00000001);
						}
					}else{
						mods[i][2].up();
						if(!active){
							this.post(0x101,mods[i][0],mods[i][1]|0xC0000001);
						}
					}
				}
			}
		},
		
		
		__mouseEvent__:function(msg,wh,x,y,nonClient,sc){
			var wp,lp;
			if(nonClient && !sc){
				lp=((0xFFFF&(this.y+(y||0)))<<16)|(0xFFFF&(this.x+(x||0)));
				var part=(0xFFFF&this.send(0x84,0,lp));
				if(part==1){
					wp=wh|part;
				}else{
					nonClient=false;
				}
			}
			if(!wp){
				var Key=require('Keyboard').Key;
				var Mouse=require('Mouse').Mouse;
				wp=wh
					|((new Key(0x10,0x2a)).state<<2)
					|((new Key(0x11,0x1d)).state<<3)
					|(~~Mouse.leftButton)
					|(Mouse.rightButton<<1)
					|(Mouse.middleButton<<4)
					|(Mouse.x1Button<<5)
					|(Mouse.x2Button<<6);
				
				if(sc){
					try{
						var p=Point.alloc();
						if(nonClient){
							p.x=0;
							p.y=0;
							ClientToScreen(this.handle,p);
							lp=((0xFFFF&(p.y+(y||0)))<<16)|(0xFFFF&(p.x+(x||0)));
						}else{
							p.x=x||0;
							p.y=y||0;
							ClientToScreen(this.handle,p);
							lp=((0xFFFF&p.y)<<16)|(0xFFFF&p.x);
						}
					}finally{
						free(p);
					}
				}else{
					lp=((0xFFFF&(y||0))<<16)|(0xFFFF&(x||0));
				}
			}
			for(var i=0,l=msg.length;i<l;i++){
				this.post(msg[i]+((nonClient&&!sc)?0xA0:0x200),wp,lp);
			}
			return(this);
		},
		lbuttonDown:function(x,y,nonClient)(this.__mouseEvent__([0x1],0,x,y,nonClient)),
		rbuttonDown:function(x,y,nonClient)(this.__mouseEvent__([0x4],0,x,y,nonClient)),
		mbuttonDown:function(x,y,nonClient)(this.__mouseEvent__([0x7],0,x,y,nonClient)),
		x1buttonDown:function(x,y,nonClient)(this.__mouseEvent__([0xB],0,x,y,nonClient)),
		x2buttonDown:function(x,y,nonClient)(this.__mouseEvent__([0xB],0x00010000,x,y,nonClient)),
		
		lbuttonUp:function(x,y,nonClient)(this.__mouseEvent__([0x2],0,x,y,nonClient)),
		rbuttonUp:function(x,y,nonClient)(this.__mouseEvent__([0x5],0,x,y,nonClient)),
		mbuttonUp:function(x,y,nonClient)(this.__mouseEvent__([0x8],0,x,y,nonClient)),
		x1buttonUp:function(x,y,nonClient)(this.__mouseEvent__([0xC],0,x,y,nonClient)),
		x2buttonUp:function(x,y,nonClient)(this.__mouseEvent__([0xC],0x00010000,x,y,nonClient)),
		
		lbuttonClick:function(x,y,nonClient)(this.__mouseEvent__([0x1,0x2],0,x,y,nonClient)),
		rbuttonClick:function(x,y,nonClient)(this.__mouseEvent__([0x4,0x5],0,x,y,nonClient)),
		mbuttonClick:function(x,y,nonClient)(this.__mouseEvent__([0x7,0x8],0,x,y,nonClient)),
		x1buttonClick:function(x,y,nonClient)(this.__mouseEvent__([0xB,0xC],0,x,y,nonClient)),
		x2buttonClick:function(x,y,nonClient)(this.__mouseEvent__([0xB,0xC],0x00010000,x,y,nonClient)),
		
		lbuttonDoubleClick:function(x,y,nonClient)(this.__mouseEvent__([0x1,0x2,0x1,0x3],0,x,y,nonClient)),
		rbuttonDoubleClick:function(x,y,nonClient)(this.__mouseEvent__([0x4,0x5,0x4,0x6],0,x,y,nonClient)),
		mbuttonDoubleClick:function(x,y,nonClient)(this.__mouseEvent__([0x7,0x8,0x7,0x9],0,x,y,nonClient)),
		x1buttonDoubleClick:function(x,y,nonClient)(this.__mouseEvent__([0xB,0xC,0xB,0xD],0,x,y,nonClient)),
		x2buttonDoubleClick:function(x,y,nonClient)(this.__mouseEvent__([0xB,0xC,0xB,0xD],0x00010000,x,y,nonClient)),
		
		mouseMove:function(x,y,nonClient)(this.__mouseEvent__([0x0],0,x,y,nonClient)),
		wheelDown:function(x,y,nonClient)(this.__mouseEvent__([0xA],-120<<16,x,y,nonClient,true)),
		wheelUp:function(x,y,nonClient)(this.__mouseEvent__([0xA],120<<16,x,y,nonClient,true)),
		tiltLeft:function(x,y,nonClient)(this.__mouseEvent__([0xE],-120<<16,x,y,nonClient,true)),
		tiltRight:function(x,y,nonClient)(this.__mouseEvent__([0xE],120<<16,x,y,nonClient,true)),
		
		
		
		
		
		
		send:function(msg,wp,lp,timeout){
			if(typeof(msg)!='number'){
				msg=this.constructor.messages[msg]||0;
			}
			try{
				var swp,slp, bwp,blp, rwp,rlp, awp,alp, hproc;
				
				switch(typeof(wp)){
					case('number'):{
						break;
					}default:{
						wp=Number(wp);
						break;
					}case('string'):{
						swp=wp.length*2+2;
						bwp=WideString.from(wp);
						wp=bwp.valueOf();
						break;
					}case('object'):{
						if(wp instanceof Array){
							swp=wp[0].size;
							bwp=wp[0].alloc().update(wp[1]);
							wp=bwp.valueOf();
						}else if(wp instanceof Pointer){
							swp=wp.constructor.entity.size;
							wp=wp.valueOf();
						}else{
							wp=Number(wp);
						}
						break;
					}
				}
				if(!this.__owned__ && (swp||slp)){
					hproc=OpenProcess(0x38,0,this.ownerProcess.id);
					if(swp){
						rwp=VirtualAllocEx(hproc,0,swp,0x1000,0x40);
						WriteProcessMemory(hproc,rwp,wp, swp, 0);
						if(!bwp){
							awp=wp;
						}
						wp=rwp;
					}
					if(slp){
						rlp=VirtualAllocEx(hproc,0,slp,0x1000,0x40);
						WriteProcessMemory(hproc,rlp,lp, slp, 0);
						if(!bwp){
							alp=lp;
						}
						lp=rlp;
					}
				}
				
				if(timeout){
					try{
						var r=UInt.alloc();
						if(0!=SendMessageTimeout(this.handle,msg,wp,lp,2,timeout,r)){
							return(r.item());
						}
					}finally{
						r&&r.free();
					}
				}else{
					return(SendMessage(this.handle,msg,wp,lp));
				}
			}finally{
				awp && ReadProcessMemory(hproc,rwp,awp,swp,0);
				alp && ReadProcessMemory(hproc,rlp,alp,slp,0);
				
				rwp&&	VirtualFreeEx(hproc,rwp,0,0x8000);
				rlp&&	VirtualFreeEx(hproc,rlp,0,0x8000);
				
				bwp&&bwp.free();
				blp&&blp.free();
				
				hproc&&	CloseHandle(hproc);
			}
			return(this);
		},
		
		request:function(func){
			if(this.__threadRequests__){
				try{
					var tid=GetCurrentThreadId();
					this.__threadRequests__[tid]=func;
					this.send(WM_REQUESTFORTHREAD,tid,0);
					return(this.__threadRequests__[tid]);
				}finally{
					delete(this.__threadRequests__[tid]);
				}
			}
		},
		
		
		dropFiles:function(f,x,y,nc){
			try{
				f=(f instanceof Array)?f:[f];
				var size=DropFiles.size+4;
				for(var i=0,l=f.length;i<l;i++){
					size+=2*(String(f[i]).length+1);
				}
				var hDrop=GlobalAlloc(0x42,size);
				var drop=new (DropFiles.pointer)(GlobalLock(hDrop));
				drop.offset=DropFiles.size;
				drop.x=x||0;
				drop.y=y||0;
				drop.isNonClient=nc?1:0;
				drop.isWideString=1;
				var dest=new WideString(drop.inc(1));
				for(var i=0,l=f.length;i<l;i++){
					var str=String(f[i]);
					dest.update(str);
					dest.inc(str.length).update(0);
					dest=dest.inc(str.length+1);
				}
				GlobalUnlock(hDrop);
				this.post(0x233,drop,0);
				return(this);
			}finally{
				hDrop && GlobalFree(hDrop);
			}
		},
		
		capture:function(noNC)(require('Image.win32').Image.capture(this,noNC)),
		
		
		command:function(name,hwnd)(this.send(0x111,(typeof(name)=='number')?name:(this.constructor.commands[name]||0),hwnd||0)),
		get style()(GetWindowLong(this.handle,-16)),
		set style(v)(SetWindowLong(this.handle,-16,v)),
		get exStyle()(GetWindowLong(this.handle,-20)),
		set exStyle(v)(SetWindowLong(this.handle,-20,v)),
		
		get ownerProcess(){
			try{
				var p=UInt.alloc();
				if(GetWindowThreadProcessId(this.handle,p)){
					return(new Process(p.item()));
				}
			}finally{
				p&&p.free();
			}
		},
		get ownerThread(){
			var tid=GetWindowThreadProcessId(this.handle,null);
			if(tid){
				return(new Thread(tid));
			}
		},
		
		get className(){
			try{
				var buf=WChar.alloc(256);
				if(0!=GetClassName(this.handle,buf,256)){
					return(buf.toString());
				}
			}finally{
				buf&&buf.free();
			}
		},
		get text(){
			try{
				var size=SendMessage(this.handle,0x0E,0,0)+1;
				if(size==1){
					return("");
				}else{
					var buf=WChar.alloc(size);
					if(SendMessage(this.handle,0x0D,size,buf.valueOf())){
						return(buf.toString());
					}
				}
			}finally{
				buf&&buf.free();
			}
		},
		set text(s){
			try{
				var buf=WideString.from(s);
				SendMessage(this.handle,0x0C,0,buf.valueOf());
			}finally{
				buf&&buf.free();
			}
		},
		
		
		get enabled()(0==(this.style&0x08000000)),
		set enabled(b)(EnableWindow(this.handle,b?1:0)),
		
		get visible()(IsWindowVisible(this.handle)!=0),
		set visible(b)(b?this.show():this.hide()),
		show:function(sync){
			(sync?ShowWindow:ShowWindowAsync)(this.handle,8);
			return(this);
		},
		hide:function(sync){
			(sync?ShowWindow:ShowWindowAsync)(this.handle,0);
			return(this);
		},
		
		get rect(){
			try{
				var rect=Rect.alloc();
				if(GetWindowRect(this.handle,rect)!=0){
					return(rect.toObject());
				}
			}finally{
				rect&&rect.free();
			}
		},
		get clientRect(){
			try{
				var rect=Rect.alloc();
				if(GetClientRect(this.handle,rect)!=0){
					return(rect.toObject());
				}
			}finally{
				rect&&rect.free();
			}
		},
		get clientWidth()(this.clientRect.right),
		get clientHeight()(this.clientRect.bottom),
		get clientLeft(){
			try{
				var p=Point.alloc();
				p.x=0;p.y=0;
				ClientToScreen(this.handle,p);
				return(p.x-this.x);
			}finally{
				free(p);
			}
		},
		get clientTop(){
			try{
				var p=Point.alloc();
				p.x=0;p.y=0;
				ClientToScreen(this.handle,p);
				return(p.y-this.y);
			}finally{
				free(p);
			}
		},
		
		get x()(this.rect.left*1),
		get y()(this.rect.top*1),
		get width()(let(r=this.rect)1*r.right-1*r.left),
		get height()(let(r=this.rect)1*r.bottom-1*r.top),
		set x(p)(this.moveTo(p)),
		set y(p)(this.moveTo(void(0),p)),
		set width(w)(this.resize(w)),
		set height(h)(this.resize(void(0),h)),
		moveTo:function(x,y,w,h,sync){
			var o;
			x=(typeof(x)=='undefined')?(o=this.rect).left:x;
			y=(typeof(y)=='undefined')?(o||(o=this.rect)).top:y;
			if(arguments.length>2){
				w=(typeof(w)=='undefined')?(o||(o=this.rect)).width:w;
				h=(typeof(h)=='undefined')?(o||this.rect).height:h;
				SetWindowPos(this.handle,0,x,y,w,h,0x214+(sync?0:0x4000));
			}else{
				SetWindowPos(this.handle,0,x,y,0,0,0x215+(sync?0:0x4000));
			}
			return(this);
		},
		resize:function(w,h,sync){
			var o;
			SetWindowPos(this.handle,0,0,0,(typeof(w)=='undefined')?(o=this.rect).width:w,(typeof(h)=='undefined')?(o||this.rect).height:h,0x216+(sync?0:0x4000));
			return(this);
		},
		
		
		get parent()(this.__parentWindow__||((this.style&0x40000000)?SelectWindowClass(GetAncestor(this.handle,1)):void(0))),
		get root()(this.__root__||((this.style&0x40000000)?SelectWindowClass(GetAncestor(this.handle,2)):this)),
		
		get next(){
			var h=GetWindow(this.handle,2);
			if(h){
				return(SelectWindowClass(h));
			}
		},
		get prev(){
			var h=GetWindow(this.handle,3);
			if(h){
				return(SelectWindowClass(h));
			}
		},
		
		
		
		
		
		
		child:function(className,idx){
			var hwnd=0;
			idx=idx||0;
			while(hwnd=FindWindowEx(this.handle,hwnd,className,null)){
				if((idx--)==0){
					return(SelectWindowClass(hwnd,className));
				}
			}
		},
		
		
		control:function(name,idx)(this.controls(name).item(idx||0)),
		controls:function(name)(this.descendants.filter('className',name)),
		
		get children(){
			var handles=[];
			EnumChildWindows(this.handle,function(h,lp){
				handles.push(h);
				return(true);
			},0);
			try{
				var cn=WChar.alloc(256);
				for(var i=0,l=handles.length;i<l;i++){
					if((GetAncestor(handles[i],1)==this.handle)&&(0!=GetClassName(handles[i],cn,256))){
						yield(SelectWindowClass(handles[i], cn.toString()));
					}
				}
			}finally{
				cn&&cn.free();
			}
		},
		get descendants(){
			var handles=[];
			EnumChildWindows(this.handle,function(h,lp){
				handles.push(h);
				return(true);
			},0);
			try{
				var cn=WChar.alloc(256);
				for(var i=0,l=handles.length;i<l;i++){
					if(0!=GetClassName(handles[i],cn,256)){
						yield(SelectWindowClass(handles[i], cn.toString()));
					}
				}
			}finally{
				cn&&cn.free();
			}
		},
		
		
	});
	
	var RegisterShellHookWindow=	user32.proc('RegisterShellHookWindow',[UInt],UInt);
	var DeregisterShellHookWindow=	user32.proc('DeregisterShellHookWindow',[UInt],UInt);
	var WM_SHELLHOOK=				RegisterWindowMessage("SHELLHOOK");
	var WinEventProc=				StdCallFunction.define([UInt,UInt,UInt,UInt,UInt,UInt],Int);
	var SetWinEventHook=			user32.proc('SetWinEventHook',[UInt,UInt,UInt,Pointer,UInt,UInt,UInt],UInt);
	var UnhookWinEvent=				user32.proc('UnhookWinEvent',[UInt],Int);
	var PostThreadMessage=			user32.proc('PostThreadMessageW',[UInt,UInt,UInt,UInt],Int);
	
	
	var Window=AbstractWindow.define({
		styles:{
			hasSysMenu:		0x00080000,
			hasTickFrame:	0x00040000,
			hasMinimizeBox:	0x00020000,
			hasMaximizeBox:	0x00010000,
		},
		controlParent:true,
		hasSysMenu:true,
		hasBorder:true,
		clipChildren:true,
		clipSiblings:true,
		hasTickFrame:true,
		hasMaximizeBox:true,
		hasMinimizeBox:true,
		messages:{
			queryEndSession:0x11,
			endSession:		0x16,
			powerBroadcast:	0x0218,
			taskbarCreated:	RegisterWindowMessage("TaskbarCreated"),
			destroy:		0x0002,
			close:			0x0010,
			notifyIcon:		0x0408,
			synchroInvoke:	0x0456,
		},
		properties:{
			icon:				void(0),
			topmost:			void(0),
			enabled:			void(0),
			resizable:			void(0),
			maximizable:		void(0),
			minimizable:		void(0),
			transparentColor:	void(0),
			alpha:				void(0),
		},
		
	}).addMembers(FindInstanceMixin,{
		__class__:{
			__observeFirst__:function(){
				var WINDOW=this;
				this.__observed__=true;
				this.__observerThread__=Thread.create(function(){
					try{
						var func=function(h,e,w,o,c,t,m){
							try{
								var res=new WINDOW(w);
								if(WINDOW.__observed__ && ((GetWindowLong(w,-16)&0x40000000)==0) && res.valid){
									WINDOW.fire({3:'activate',0x8000:'create',0x8001:'destroy',0x8002:'show',0x8003:'hide'}[e],{window:res});
								}
							}catch(e){
								println(e);
							}
						};
						var shellfunc=function(obj){
							try{
								switch(obj.wparam){
									case(6):{
										var res=new WINDOW(obj.lparam);
										if(res.valid){
											WINDOW.fire('redraw',{window:res});
										}
										break;
									}
								}
							}catch(e){
								println(e);
							}
						};
						RegisterShellHookWindow(Main.window.handle);
						Main.window.observe(WM_SHELLHOOK,shellfunc);
						var pfunc=WinEventProc.from(func);
						var hhook1=SetWinEventHook(3,3, 0,pfunc, 0,0, 0);
						var hhook2=SetWinEventHook(0x8000,0x8003, 0,pfunc, 0,0, 0);
						
						var msg=MSG.alloc();
						while(true){
							try{
								if(GetMessage(msg,0,0,0)<=0){
									break;
								}
							}catch(e if(e&&(e.result>=1))){
							}
							TranslateMessage(msg);
							DispatchMessage(msg);
						}
					}catch(e){
					}finally{
						DeregisterShellHookWindow(Main.window.handle);
						Main.window.unobserve(WM_SHELLHOOK,shellfunc);
						hhook1&&	UnhookWinEvent(hhook1);
						hhook2&&	UnhookWinEvent(hhook2);
						pfunc&&		pfunc.free();
						msg&&		msg.free();
					}
				});
				Main.reside();
				Main.observe('exit',function(){
					try{
						WINDOW.unobserveAll();
					}catch(e){
						println(e);
					}
				});
			},
			__unobserveLast__:function(){
				this.__observed__=false;
				PostThreadMessage(this.__observerThread__.id,0x12,0,0);
				this.__observerThread__.waitExit();
				this.__observerThread__.free();
				this.__observerThread__=null;
				Main.unreside();
			},
			
			
			
			showPopupMenu:function(items,opt){
				var x,y;
				if(opt=='caret'){
					var c=this.active.caret;
					opt={modal:true,x:c.x,y:c.y};
				}else{
					opt=Object.extend({modal:true},opt||{});
				}
				try{
					var w=this.create();
					if(typeof(items)=='function'){
						w.addCommand({cmds:{getItems:items}});
					}else{
						w.addCommand({cmds:{items:items}});
					}
					w.showPopupMenu(['cmds'],opt);
				}finally{
					free(w);
				}
			},
			
			get active(){
				var res=SelectWindowClass(GetForegroundWindow());
				if(res.valid){
					return(res);
				}
			},
			
			get all(){
				var handles=[];
				EnumWindows(function(handle,lp){
					handles.push(handle);
					return(1);
				},0);
				for(var i=0,l=handles.length;i<l;i++){
					var res=new this(handles[i]);
					if((!this.className||(res.className==this.className)) && res.valid){
						yield(SelectWindowClass(handles[i]));
					}
				}
			},
			fromPoint:function(x,y){
				if((typeof(x)=='object')&&(typeof(x.x)!='undefined') && (typeof(x.y)!='undefined')){
					y=x.y;
					x=x.x;
				}
				var w=new this(WindowFromPoint(x,y));
				if(w.valid){
					return(w);
				}
			},
			broadcast:function(msg,wp,lp,timeout){
				if(typeof(msg)!='number'){
					msg=this.messages[msg]||0;
				}
				if(timeout){
					try{
						var r=UInt.alloc();
						SendMessageTimeout(0xFFFF,msg,wp||0,lp||0,2,timeout,r);
					}finally{
						r&&r.free();
					}
				}else{
					PostMessage(0xFFFF,msg,wp||0,lp||0);
				}
			},
		},
		initializeMenu:function(handle,items){
			this.clearMenu(handle);
			if(typeof(items)=='function'){
				return(items(handle));
			}
			if(items instanceof Command){
				items=this.getCommands(items.id);
			}
			if(!(items instanceof Array)){
				items=[items];
			}
			try{
				var info=MenuItemInfo.alloc();
				info.size=48;
				var cnt=0;
				var buf;
				for(var i=0,l=items.length;i<l;i++){
					switch(typeof(items[i])){
						case('string'):case('number'):items[i]=this.getCommand(items[i]);
					}
					if(!(items[i] instanceof Array)){
						items[i]=[items[i]];
					}
					for(var j=0,c=items[i].length;j<c;j++){
						var item=items[i][j];
						if(!item){
							info.mask=0x00000100;
							info.type=0x00000800;
						}else{
							if(item.expand||item.items){
								info.mask=0x00000144;
								info.subMenu=CreatePopupMenu();
								(this.__popupMenuCommands__||(this.__popupMenuCommands__={}))[info.subMenu]=item.expand?item:item.items;
							}else{
								info.mask=0x143;
								info.type=item.group?0x200:0;
								info.state=(item.active?8:0)+(item.enabled?0:3);
								info.id=item.id;
							}
							buf&&buf.free();
							buf=WideString.from(this.texts[item.name]||item.title||item.name||item.id);
							info.typeData=buf.valueOf();
						}
						
						InsertMenuItem(handle,cnt,0x400,info);
						cnt++;
					}
				}
			}finally{
				info&&info.free();
				buf&&buf.free();
			}
		},
		clearMenu:function(handle){
			try{
				var info=MenuItemInfo.alloc();
				info.size=48;
				info.mask=0x00000004;
				var i=GetMenuItemCount(handle);
				while(i--){
					GetMenuItemInfo(handle,i,0x00000400,info);
					if(info.subMenu && this.__popupMenuCommands__){
						delete(this.__popupMenuCommands__[info.subMenu]);
					}
					DeleteMenu(handle,i,0x00000400);
				}
			}finally{
				info&&info.free();
			}
		},
		cleanupPopupMenu:function(){
			if(this.__lastPopupMenuHandle__){
				this.clearMenu(this.__lastPopupMenuHandle__);
				DestroyMenu(this.__lastPopupMenuHandle__);
			}
		},
		showPopupMenu:function(items,opt){
			var m=require('Mouse').Mouse;
			opt=opt||{};
			this.cleanupPopupMenu();
			this.__lastPopupMenuHandle__=CreatePopupMenu();
			this.initializeMenu(this.__lastPopupMenuHandle__,items||this.contextMenu||[]);
			try{
				var params=opt.exclude && TPMParams.alloc().update(Object.extend({size:20},opt.exclude));
				if(!opt.modal){
					var info=MenuInfo.alloc();
					info.size=28;
					info.mask= 0x00000010;
					info.style=0x40000000;
					SetMenuInfo(this.__lastPopupMenuHandle__,info);
				}
				if(this.ownerThread.id!=GetCurrentThreadId()){
					var win=opt.parentHandle=CreateWindowEx(0,this.className, "", 0, 0, 0, 0, 0, 0xFFFFFFFD,0, Main.handle, 0);
					(new Window(win)).activate(true);
				}
				var ret=TrackPopupMenuEx(this.__lastPopupMenuHandle__, 0x0041 | (opt.modal?0x100:0), (typeof(opt.x)=='undefined')?m.x:opt.x, (typeof(opt.y)=='undefined')?m.y:opt.y, opt.parentHandle||this.handle, params||null);
				if(opt.modal && ret){
					this.executeCommand(ret);
				}
				return(ret);
			}finally{
				win&&SendMessage(win,0x10,0,0);
				info&&info.free();
				params && params.free();
			}
		},
		mapAccelerators:function(map){
			var Key=require('Keyboard').Key;
			this.__acceleratorCount__||(this.__acceleratorCount__=0);
			this.__accelerators__||(this.__accelerators__={});
			var up=false;
			for each(let [n,v] in Iterator(map)){
				var array=(""+n).split(/\s*\+\s*/);
				var key=array.pop();
				var flags=0;
				var k;
				
				if(k=key.match(/^vk([0-9a-f]+)/i)){
					k=parseInt('0x'+k[1])|0x00010000;
				}else if(k=(new Key(key)).code){
					k|=0x00010000;
				}else{
					k=key.charCodeAt(0);
				}
				for(var i=0,l=array.length;i<l;i++){
					k|={a:0x00100000,c:0x00080000,s:0x00040000}[array[i].charAt(0).toLowerCase()]||0;
				}
				if(v && (v=this.getCommand(v))){
					switch(this.__accelerators__[k]||0){
						case(0):{
							this.__acceleratorCount__++;
						}default:{
							this.__accelerators__[k]=v.id;
							up=true;
						}case(v.id):{
						}
					}
				}else if(this.__accelerators__[k]){
					delete(this.__accelerators__[k]);
					this.__acceleratorCount__--;
					up=true;
				}
			}
			if(this.__acceleratorCount__ && up){
				if(this.__acceleratorHandle__){
					DestroyAcceleratorTable(this.__acceleratorHandle__);
				}else{
					this.observe('destroy',function()(DestroyAcceleratorTable(this.__acceleratorHandle__)));
				}
				try{
					var acc=Accel.alloc(this.__acceleratorCount__);
					var i=0;
					for each(let [n,v] in Iterator(this.__accelerators__)){
						acc.inc(i++).update({fVirt:((n*1)>>16)|0x2,key:n&0xFFFF,cmd:v});
					}
					this.__acceleratorHandle__=CreateAcceleratorTable(acc,this.__acceleratorCount__);
				}finally{
					acc&&acc.free();
				}
			}
			return(this);
		},
		addNotifyIcon:function(opt)((this.__notifyIcons__||(this.__notifyIcons__=[])).push(NotifyIcon.create(this, this.__notifyIcons__.length,Object.extend({icon:this.icon,text:this.text},opt||{}))),this.__notifyIcons__[this.__notifyIcons__.length-1]),
		get notifyIcons()(this.__notifyIcons__||[]),
		get notifyIcon()(this.notifyIcons[0]),
		get icon(){
			var h=GetClassLong(this.handle,-34)|| this.send(0x7F,1,0) || this.send(0x7F,0,0);
			if(h){
				return(new (require('Image').Icon)(h,true));
			}
		},
		set icon(ico){
			var {Icon,Image}=require('Image');
			
			if(ico instanceof Image){
				ico=new Icon(ico.getHICON());
			}else if(typeof(ico)=='number'){
				ico=new Icon(ico,true);
			}else if((ico||{}).handle){
				ico=new Icon(ico.handle,true);
			}else{
				ico=Icon.load(ico);
			}
			if(ico.handle){
				if(this.__currentIcon__){
					this.__currentIcon__.free();
				}
				this.send(0x80,1,ico.handle);
				this.__currentIcon__=ico;
			}
		},
		free:function()(this.close(true)),
		close:function(sync){
			if(sync){
				if(typeof(sync)!="number"){
					sync=Number.POSITIVE_INFINITY;
				}
				for(var i=0;this.exists&&(i<sync);i++){
					SendMessage(this.handle,0x10,0,0);
					if(i>0){
						sleep(10);
					}
				}
				if(this.__owned__ && ((this.ownerThread||{}).id!=GetCurrentThreadId())){
					for(var i=0;i<100;i++){
						if(this.ownerThread){
							sleep(20);
						}
					}
				}
			}else{
				PostMessage(this.handle,0x10,0,0);
			}
		},
		get active()(GetForegroundWindow()==this.handle),
		get focused()((Window.focused||{handle:0}).handle==this.handle),
		activate:function(f){
			var tid1=GetWindowThreadProcessId(GetForegroundWindow(),null);
			var tid2=GetWindowThreadProcessId(this.handle,null);
			var tid3=GetCurrentThreadId();
			if(f&&(tid1!=tid3)){
				try{
					var att1=(tid1!=tid2)&&AttachThreadInput(tid1,tid2,1);
					var att2=(tid2!=tid3)&&AttachThreadInput(tid2,tid3,1);
					var buf=UInt.alloc();
					SystemParametersInfo(0x2000,0,buf.valueOf(),0);
					SystemParametersInfo(0x2001,0,0,0);
					SetForegroundWindow(this.handle);
					SystemParametersInfo(0x2001,0,buf.item(),0);
				}finally{
					buf && buf.free();
					att2 && AttachThreadInput(tid2,tid3,0);
					att1 && AttachThreadInput(tid1,tid2,0);
				}
			}else{
				SetForegroundWindow(this.handle);
			}
			return(this);
		},
		get __instanceName__()(this.className),
		get __instanceText__()(this.text),
		get title()(this.text),
		set title(s)(this.text=s),
		
		get resizable()(0!=(this.style&0x00040000)),
		set resizable(b){
			this.style=b?(this.style|0x00040000):(this.style&(~0x00040000));
			SetWindowPos(this.handle,0,0,0,0,0,0x237);
		},
		
		moveToCenter:function(x,y,D,sync){
			var d=(!D)?Display.primary:((typeof(D)=='number')?Display.item(D||0):Display[D]);
			this.moveTo(
				d.x+(d.width/2)-(this.width/2)+(x||0),
				d.y+(d.height/2)-(this.height/2)+(y||0),
				void(0),void(0),sync
			);
			return(this);
		},
		
		moveToTop:function(sync){
			SetWindowPos(this.handle,-1,0,0,0,0,0x213+(sync?0:0x4000));
			SetWindowPos(this.handle,-2,0,0,0,0,0x213+(sync?0:0x4000));
			return(this);
		},
		moveToBottom:function(sync){
			SetWindowPos(this.handle,1,0,0,0,0,0x213+(sync?0:0x4000));
			return(this);
		},
		moveBelow:function(w,sync){
			SetWindowPos(this.handle,w.handle||w,0,0,0,0,0x213+(sync?0:0x4000));
			return(this);
		},
		moveAbove:function(w,sync){
			var h=GetWindow(w.handle||w,3);
			if(h){
				SetWindowPos(this.handle,h,0,0,0,0,0x213+(sync?0:0x4000));
			}else{
				this.moveToTop(sync);
			}
			return(this);
		},
		
		
		
		minimize:function(sync){
			(sync?ShowWindow:ShowWindowAsync)(this.handle,7);
			return(this);
		},
		maximize:function(sync){
			(sync?ShowWindow:ShowWindowAsync)(this.handle,3);
			return(this);
		},
		
		restore:function(sync){
			(sync?ShowWindow:ShowWindowAsync)(this.handle,9);
			return(this);
		},
		
		get minimized(){
			try{
				var p=WindowPlacement.alloc();
				GetWindowPlacement(this.handle,p);
				return(p.showCmd==2);
			}finally{
				p&&p.free();
			}
		},
		set minimized(b){
			if(this.minimized){
				if(!b){
					this.restore(true);
				}
			}else{
				if(b){
					this.minimize(true);
				}
			}
		},
		get maximized(){
			try{
				var p=WindowPlacement.alloc();
				GetWindowPlacement(this.handle,p);
				return(p.showCmd==3);
			}finally{
				p&&p.free();
			}
		},
		set maximized(b){
			if(this.maximized){
				if(!b){
					this.restore(true);
				}
			}else{
				if(b){
					this.maximize(true);
				}
			}
		},
		
		get maximizable()(0!=(this.style&0x00010000)),
		set maximizable(b){
			this.style=b?(this.style|0x00010000):(this.style&(~0x00010000));
			SetWindowPos(this.handle,0,0,0,0,0,0x237);
		},
		
		get minimizable()(0!=(this.style&0x00020000)),
		set minimizable(b){
			this.style=b?(this.style|0x00020000):(this.style&(~0x00020000));
			SetWindowPos(this.handle,0,0,0,0,0,0x237);
		},
		
		
		get topmost()(0!=(this.exStyle&0x8)),
		set topmost(b)(SetWindowPos(this.handle,b?-1:-2,0,0,0,0,0x213)),
		
		get alpha(){
			if((this.exStyle&0x00080000)!=0){
				try{
					var a=UInt.alloc();
					var f=UInt.alloc();
					GetLayeredWindowAttributes(this.handle,null,a,f);
					if((f.item()&2)!=0){
						return(a.item());
					}
				}finally{
					a&&a.free();
					f&&f.free();
				}
			}
		},
		set alpha(v){
			var s=this.exStyle,c,f;
			try{
				if(typeof(v)=='undefined'){
					if((s&0x00080000)!=0){
						GetLayeredWindowAttributes(this.handle,c=UInt.alloc(),null,f=UInt.alloc());
						if(f.item()&1){
							SetLayeredWindowAttributes(this.handle,c.item(),255,1);
						}else{
							this.exStyle=s&(~0x00080000);
						}
					}
				}else{
					if((s&0x00080000)==0){
						this.exStyle=s|0x00080000;
					}
					GetLayeredWindowAttributes(this.handle,c=UInt.alloc(),null,f=UInt.alloc());
					SetLayeredWindowAttributes(this.handle,c.item(),Math.min(v,255),f.item()|2);
				}
			}finally{
				f&&f.free();
				c&&c.free();
			}
		},
		get transparentColor(){
			if((this.exStyle&0x00080000)!=0){
				try{
					var c=UInt.alloc();
					var f=UInt.alloc();
					GetLayeredWindowAttributes(this.handle,c,null,f);
					if((f.item()&1)!=0){
						var v=c.item();
						return((v>>16)|(v&0xFF00)|((v&0xFF)<<16));
					}
				}finally{
					c&&c.free();
					f&&f.free();
				}
			}
		},
		set transparentColor(v){
			var s=this.exStyle,a,f;
			try{
				if(typeof(v)=='undefined'){
					if((s&0x00080000)!=0){
						GetLayeredWindowAttributes(this.handle,null,a=UInt.alloc(),f=UInt.alloc());
						if(f.item()&2){
							SetLayeredWindowAttributes(this.handle,0,a.item(),2);
						}else{
							this.exStyle=s&(~0x00080000);
						}
					}
				}else{
					if((s&0x00080000)==0){
						this.exStyle=s|0x00080000;
					}
					GetLayeredWindowAttributes(this.handle,null,a=UInt.alloc(),f=UInt.alloc());
					SetLayeredWindowAttributes(this.handle,(v>>16)|(v&0xFF00)|((v&0xFF)<<16),a.item(),f.item()|1);
				}
			}finally{
				f&&f.free();
				a&&a.free();
			}
		},
	});
	var MessageReceiver=Window.define({
		messageOnly:true,
	});
	
	var PlainWindow=Window.define({
		isPopupWindow:true,hasTickFrame:false,hasBorder:false,hasDlgFrame:false,
	});
	var OnScreenDisplay=Window.define({
		isPopupWindow:true,hasTickFrame:false,hasBorder:false,hasDlgFrame:false,
		toolWindow:true, 
		topmost:true,
		transparent:true,
	});
	
	
	
	var ChildWindow=AbstractWindow.define({
		styles:{
			beginGroup:		0x00020000,
			tabStop:		0x00010000,
		},
		properties:{
			textColor:void(0),
		},
		visible:true,
		isChildWindow:true,
		tabStop:true,
		validator:function()(this.style&0x40000000),
		
	}).addMembers({
		get __dc__()(GetDC(this.handle)),
	});
	
	
	var Edit=ChildWindow.define({
		className:'Edit',
		styles:{
			alignCenter:	0x0001,
			alignRight:		0x0002,
			multiline:		0x0004,
			uppercase:		0x0008,
			lowercase:		0x0010,
			password:		0x0020,
			autoVScroll:	0x0040,
			autoHScroll:	0x0080,
			noHideSel:		0x0100,
			oemConvert:		0x0400,
			readOnly:		0x0800,
			wantReturn:		0x1000,
			numberOnly:		0x2000,
		},
		clientEdge:true,
		noHideSel:true,
		messages:{
			cut:		0x300,
			copy:		0x301,
			paste:		0x302,
			clear:		0x303,
			undo:		0x304,
		},
		
		notifications:{
			focus:			0x0100,
			unfocus:		0x0200,
			change:			0x0300,
			update:			0x0400,
			outOfMemory:	0x0500,
			maxText:		0x0501,
			hScroll:		0x0601,
			vScroll:		0x0602,
			alignLTR:		0x0700,
			alignRTL:		0x0701,
		},
		
		properties:{
			leftMargin:0,
			rightMargin:0,
			tabStops:void(0),
			passwordChar:void(0),
			maxLength:void(0),
		},
		
	}).addMembers({
		get lineCount()(this.send(0x00BA)),
		line:function(n){
			try{
				var size=SendMessage(this.handle,0xC1,n||0,0);
				var buf=WChar.alloc(size+1);
				(new (UInt.pointer)(buf.valueOf())).update(size);
				var len;
				if(len=SendMessage(this.handle,0xC4,n||0,buf.valueOf())){
					buf.inc(len).update(0);
					return(buf.toString());
				}
			}finally{
				buf&&buf.free();
			}
		},
		
		get leftMargin()(this.send(0xD4)&&0xFFFF),
		get rightMargin()(this.send(0xD4)>>16),
		set leftMargin(w)(this.send(0xD3,1,w)),
		set rightMargin(w)(this.send(0xD3,2,w<<16)),
		
		get tabStops()(void(0)),
		set tabStops(v){
			try{
				v=(typeof(v)=='number')?[v]:$A(v);
				var a=UInt.alloc(v.length);
				for(var i=0,l=v.length;i<l;i++){
					a.inc(i).update(Math.ceil(v[i]*4));
				}
				this.send(0xCB,v.length,a.valueOf());
			}finally{
				a&&a.free();
			}
		},
		get firstVisibleLine()(this.send(0xCE)),
		
		get maxLength()(this.send(0xD5)),
		set maxLength(c)(this.send(0xC5,c)),
		
		get position(){
			try{
				var p=UInt.alloc();
				SendMessage(this.handle,0xB0,p.valueOf(),0);
				return(p.item());
			}finally{
				p && p.free();
			}
		},
		get selectedLength(){
			try{
				var s=UInt.alloc();
				var e=UInt.alloc();
				SendMessage(this.handle,0xB0,s.valueOf(),e.valueOf());
				return(e.item()-s.item());
			}finally{
				s && s.free();
				e && e.free();
			}
		},
		set position(v)(this.send(0xB1,v,v)),
		set selectedLength(v)(this.select(this.position,v)),
		select:function(start,length)(this.send(0xB1,start,start+length)),
		selectAll:function()(this.send(0xB1,0,0xFFFFFFFF)),
		unselet:function()(this.send(0xB1,0xFFFFFFFF,0xFFFFFFFF)),
		
		get selection()(let(p=this.position)(this.text.slice(p,p+this.selectedLength))),
		set selection(s)(this.replaceSelection(s,false,false)),
		
		replaceSelection:function(str,unselect,useundo){
			try{
				var p=this.position,l=this.selectedLength;
				var buf=WideString.from(str=String(str));
				SendMessage(this.handle,0xC2,useundo?1:0,buf.valueOf());
				if(unselect){
					this.position=p+str.length;
				}else{
					this.position=p;
					this.selectedLength=str.length;
				}
			}finally{
				buf && buf.free();
			}
		},
		
		scroll:function(x,y)(this.send(0xB6,x,y)),
		scrollCaret:function()(this.send(0xB7)),
		
		get row()(this.send(0xC9,-1)),
		get col()(this.position-this.send(0xBB,this.send(0xC9,-1))),
		
		get modified()(this.send(0xB8)),
		set modified(v)(this.send(0xB9,v?1:0)),
		
		get passwordChar()(String.fromCharCode(this.send(0xD2))),
		set passwordChar(v)(this.send(0xCC,v.charCodeAt(0))),
		
		get canUndo()(this.send(0xC6)!=0),
		undo:function()(this.send(0xC7)),
		emptyUndoBuffer:function()(this.send(0xCD)),
		
	});
	
	
	var Button=ChildWindow.define({
		className:'Button',
		styles:{
			isDefault:		0x0001,
			isCheckbox:		0x0003,
			isRadio:		0x0009,
			is3State:		0x0006,
			isGroupBox:		0x0007,
			
			rightButton:	0x0020,
			isIcon:			0x0040,
			isBitmap:		0x0080,
			alignLeft:		0x0100,
			alignRight:		0x0200,
			alignCenterH:	0x0300,
			alignTop:		0x0400,
			alignBottom:	0x0800,
			alignVCenterV:	0x0C00,
			pushLike:		0x1000,
			multiline:		0x2000,
			fullNotify:		0x4000,
			flat:			0x8000,
		},
		notifications:{
			click:		0,
			push:		2,
			unpush:		3,
			disable:	4,
			doubleclick:5,
			focus:		6,
			unfocus:	7,
		},
		
	}).addMembers({
		press:function()(this.send(0xF5)),
	});
	
	
	var CheckBox=Button.define({
		isCheckbox:true,
		validator:function()(this.isCheckbox),
		properties:{
			checked:void(0),
		},
	}).addMembers({
		get checked()(0!=this.send(0xF0)),
		set checked(v)(this.send(0xF1,v?1:0)),
	});
	
	var Radio=Button.define({
		isRadio:true,
		validator:function()(this.isRadio),
		properties:{
			checked:void(0),
		},
	}).addMembers({
		get checked()(0!=this.send(0xF0)),
		set checked(v)(this.send(0xF1,v?1:0)),
		
		get selection(){
			var f,x;
			for each(let [n,c] in Iterator(this.parent.__children__)){
				if(f &&c.beginGroup){
					break;
				}else if(c===this){
					f=true;
				}else if(c.isRadio && c.checked){
					x=n;
				}
			}
			return(x);
		},
	});
	
	var GroupBox=Button.define({
		isGroupBox:true,
		beginGroup:true,
		validator:function()(this.isGroupBox),
	}).addMembers({
		get selection(){
			var f,x;
			for each(let [n,c] in Iterator(this.parent.__children__)){
				if(f &&c.beginGroup){
					break;
				}else if(c===this){
					f=true;
				}else if(c.isRadio && c.checked){
					x=n;
				}
			}
			return(x);
		},
	});
	
	var Static=ChildWindow.define({
		className:'Static',
		styles:{
			alignRight:		0x0001,
			alignCenter:	0x0002,
			isIcon:			0x0003,
			isBitmap:		0x000E,
			noPrefix:		0x0080,
			notifyAll:		0x0100,
			editControl:	0x2000,
			endEllipsis:	0x4000,
			pathEllipsis:	0x8000,
			wordEllipsis:	0xC000,
		},
		notifications:{
			click:			0,
			doubleclick:	1,
			enable:			2,
			disable:		3,
		},
	}).addMembers({
	});
	
	var Bitmap=Static.define({
		styles:{
			adjustSize:			0x0040,
			realSizeImage:		0x0800,
			centerImage:		0x0200,
			rightJustify:		0x0400,
		},
		properties:{
			bitmap:void(0),
		},
		isBitmap:true,
	}).addMembers({
		get bitmap(){
			var h=this.send(0x0173,0,0);
			if(h){
				return(new (require('Image').Bitmap)(h,true));
			}
		},
		set bitmap(bmp){
			var Bitmap=require('Image').Bitmap;
			if(typeof(bmp)=='number'){
				bmp=new Bitmap(bmp,true);
			}else if((bmp||{}).handle){
				bmp=new Bitmap(bmp.handle,true);
			}else{
				bmp=Bitmap.load(bmp);
			}
			if(this.__currentBitmap__){
				this.__currentBitmap__.free();
			}
			if(bmp.handle){
				this.send(0x0172,0,bmp.handle);
				this.__currentBitmap__=bmp;
			}
		},
	});
	
	var Icon=Static.define({
		styles:{
			adjustSize:			0x0040,
			realSizeImage:		0x0800,
			centerImage:		0x0200,
			rightJustify:		0x0400,
		},
		properties:{
			icon:void(0),
		},
		isIcon:true,
	}).addMembers({
		get icon(){
			var h=this.send(0x0171,0,0);
			if(h){
				return(new (require('Image').Icon)(h,true));
			}
		},
		set icon(ico){
			var Icon=require('Image').Icon;
			if(typeof(ico)=='number'){
				ico=new Icon(ico,true);
			}else if((ico||{}).handle){
				ico=new Icon(ico.handle,true);
			}else{
				ico=Icon.load(ico);
			}
			if(this.__currentIcon__){
				this.__currentIcon__.free();
			}
			if(ico.handle){
				this.send(0x0170,ico.handle,1);
				this.__currentIcon__=ico;
			}
		},
	});
	
	
	var ListBox=ChildWindow.define({
		className:'ListBox',
		styles:{
			notifyAll:			0x0001,
			sorted:				0x0002,
			noRedraw:			0x0004,
			multiple:			0x0008,
			
			ownerDrawFixed:		0x0010,
			ownerDrawVariable:	0x0020,
			hasStrings:			0x0040,
			
			useTabStops:		0x0080,
			noIntegralHeight:	0x0100,
			multiColumn:		0x0200,
			wantKeyboardInput:	0x0400,
			extendedSel:		0x0800,
			
			disableNoScroll:	0x1000,
			noData:				0x2000,
			noSelect:			0x4000,
			comboBox:			0x8000,
		},
		notifications:{
			change:		1,
			doubleclick:2,
			cancel:		3,
			focus:		4,
			unfocus:	5,
		},
		properties:{
			locale:		void(0),
			columnWidth:void(0),
			itemHeight:	void(0),
			tabStops:	void(0),
			items:		void(0),
			selections:	void(0),
		},
		hasStrings:true,
	}).addMembers({
		get items(){
			var l=this.count,a=new Array(l);
			for(var i=0;i<l;i++){
				a[i]=this.item(i);
			}
			return(a);
		},
		
		set items(a){
			a=(a instanceof Array)?a:[a];
			SendMessage(this.handle,0x000B,0,0);
			SendMessage(this.handle,0x0184,0,0);
			SendMessage(this.handle,0x01A8,a.length,a.join().length);
			for(var i=0,l=a.length;i<l;i++){
				try{
					var s=WideString.from(a[i]);
					SendMessage(this.handle,0x0180,0,s.valueOf());
				}finally{
					s && s.free();
				}
			}
			SendMessage(this.handle,0x000B,1,0);
		},
		
		get count()(this.send(0x018B)),
		
		item:function(idx){
			try{
				var size=SendMessage(this.handle,0x018A,idx||0,0);
				var buf=WChar.alloc(size+1);
				var len;
				if(len=SendMessage(this.handle,0x0189,idx||0,buf.valueOf())){
					return(buf.toString());
				}
			}finally{
				buf&&buf.free();
			}
		},
		
		add:function(str){
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x0180,0,s.valueOf());
			}finally{
				s && s.free();
			}
		},
		insert:function(str,pos){
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x0181,pos||0,s.valueOf());
			}finally{
				s && s.free();
			}
		},
		remove:function(idx)(this.send(0x0182,idx||0,0)),
		
		update:function(idx,str){
			SendMessage(this.handle,0x000B,0,0);
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x0181,idx,s.valueOf());
			}finally{
				s && s.free();
			}
			SendMessage(this.handle,0x0182,idx+1,0);
			SendMessage(this.handle,0x000B,1,0);
		},
		
		clear:function()(this.send(0x0184)),
		
		indexOf:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x01A2,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		
		find:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x018F,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		selectString:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x018C,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		
		
		itemFromPoint:function(x,y)(this.send(0x01A9,0,x|(y<<16))&0xFFFF),
		get topItem()(this.send(0x018E)),
		set topItem(idx)(this.send(0x0197,idx||0)),
		
		get tabStops()(void(0)),
		set tabStops(v){
			try{
				v=(typeof(v)=='number')?[v]:$A(v);
				var a=UInt.alloc(v.length);
				for(var i=0,l=v.length;i<l;i++){
					a.inc(i).update(Math.ceil(v[i]*4));
				}
				this.send(0x192,v.length,a.valueOf());
			}finally{
				a&&a.free();
			}
		},
		
		get columnWidth()(void(0)),
		set columnWidth(px)(this.send(0x0195,px)),
		get itemHeight()(this.send(0x01A1)),
		set itemHeight(v)(this.send(0x01A0,0,v)),
		
		get row()(this.send(0x019F)),
		set row(idx)(this.send(0x019E,idx||0)),
		
		isSelected:function(idx)(this.send(0x0187,idx||0)),
		select:function(idx)function()(this.send(0x0185,1,idx||0)),
		unselect:function(idx)function()(this.send(0x0185,0,idx||0)),
		selectAll:function()(this.send(0x0185,1,0xFFFFFFFF)),
		unselectAll:function()(this.send(0x0185,0,0xFFFFFFFF)),
		
		get selectionCount()(this.send(0x0190)),
		get selections(){
			try{
				var c=this.selectionCount;
				var v=UInt.alloc(c);
				SendMessage(this.handle,0x0191,c,v.valueOf());
				return(v.toArray());
			}finally{
				v && v.free();
			}
		},
		set selections(v){
			v=$A(v);
			this.beginUpdate();
			this.unselectAll();
			for(var i=0,l=v.length;i<l;i++){
				this.select(v[i]);
			}
			this.endUpdate();
		},
		
		get selectedStrings(){
			var ids=this.selections;
			var l=ids.length;
			var res=new Array(l);
			for(var i=0;i<l;i++){
				res[i]=this.item(i);
			}
			return(res);
		},
		
		get locale()(this.send(0x01A6)),
		set locale(v)(this.send(0x01A5,v)),
	});
	
	
	
	var ComboBox=ChildWindow.define({
		className:'ComboBox',
		styles:{
			isSimple:			0x0001,
			isDropDown:			0x0002,
			isDropDownList:		0x0003,
			ownerDrawFixed:		0x0010,
			ownerDrawVariable:	0x0020,
			autoHScroll:		0x0040,
			oemConvert:			0x0080,
			sorted:				0x0100,
			hasStrings:			0x0200,
			noIntegralHeight:	0x0400,
			disableNoScroll:	0x0800,
			uppercase:			0x2000,
			lowercase:			0x4000,
		},
		isDropDown:true,
		hasStrings:true,
		noIntegralHeight:true,
		
		notifications:{
			change:			1,
			doubleclick:	2,
			focus:			3,
			unfocus:		4,
			editChange:		5,
			editUpdate:		6,
			open:			7,
			close:			8,
			ok:				9,
			cancel:			10,
		},
		properties:{
			locale:			void(0),
			maxLength:		void(0),
			droppedWidth:	void(0),
			droppedCount:	void(0),
			itemHeight:		void(0),
			items:			void(0),
			row:			void(0),
			text:			void(0),
		},
	}).addMembers({
		get itemHeight()(this.send(0x0154)),
		set itemHeight(v)(this.send(0x0153,0,v)),
		get droppedWidth()(this.send(0x015f)),
		set droppedWidth(v)(this.send(0x0160,v)),
		
		get droppedCount()(this.send(0x1702)),
		set droppedCount(v)(this.send(0x1701,v)),
		
		get maxLength()(void(0)),
		set maxLength(v)(this.send(0x0141,v)),
		
		get opened()(this.send(0x0157)!=0),
		open:function()(this.send(0x014F,1)),
		close:function()(this.send(0x014F,0)),
		
		get position(){
			try{
				var p=UInt.alloc();
				SendMessage(this.handle, 0x0140,p.valueOf(),0);
				return(p.item());
			}finally{
				p && p.free();
			}
		},
		get selectedLength(){
			try{
				var s=UInt.alloc();
				var e=UInt.alloc();
				SendMessage(this.handle, 0x0140,s.valueOf(),e.valueOf());
				return(e.item()-s.item());
			}finally{
				s && s.free();
				e && e.free();
			}
		},
		set position(v)(this.send(0x0142,v,v)),
		set selectedLength(v)(this.select(this.position,v)),
		select:function(start,length)(this.send(0x0142,start,start+length)),
		selectAll:function()(this.send(0x0142,0,0xFFFFFFFF)),
		unselet:function()(this.send(0x0142,0xFFFFFFFF,0xFFFFFFFF)),
		
		get row()(this.send(0x0147)),
		set row(v)(this.send(0x014E,v||0)),
		
		get topItem()(this.send(0x015B)),
		set topItem(idx)(this.send(0x015C,idx||0)),
		
		get locale()(this.send(0x015A)),
		set locale(v)(this.send(0x0159,v)),
		
		get items(){
			var l=this.count,a=new Array(l);
			for(var i=0;i<l;i++){
				a[i]=this.item(i);
			}
			return(a);
		},
		
		set items(a){
			a=(a instanceof Array)?a:[a];
			SendMessage(this.handle,0x000B,0,0);
			SendMessage(this.handle,0x014B,0,0);
			SendMessage(this.handle,0x0161,a.length,a.join().length);
			for(var i=0,l=a.length;i<l;i++){
				try{
					var s=WideString.from(a[i]);
					SendMessage(this.handle,0x0143,0,s.valueOf());
				}finally{
					s && s.free();
				}
			}
			SendMessage(this.handle,0x000B,1,0);
		},
		
		get count()(this.send(0x0146)),
		
		item:function(idx){
			try{
				var size=SendMessage(this.handle,0x0149,idx||0,0);
				var buf=WChar.alloc(size+1);
				var len;
				if(len=SendMessage(this.handle,0x0148,idx||0,buf.valueOf())){
					return(buf.toString());
				}
			}finally{
				buf&&buf.free();
			}
		},
		
		add:function(str){
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x0143,0,s.valueOf());
			}finally{
				s && s.free();
			}
		},
		insert:function(str,pos){
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x014A,pos||0,s.valueOf());
			}finally{
				s && s.free();
			}
		},
		remove:function(idx)(this.send(0x0144,idx||0,0)),
		
		update:function(idx,str){
			SendMessage(this.handle,0x000B,0,0);
			try{
				var s=WideString.from(str);
				SendMessage(this.handle,0x0143,idx,s.valueOf());
			}finally{
				s && s.free();
			}
			SendMessage(this.handle,0x0144,idx+1,0);
			SendMessage(this.handle,0x000B,1,0);
		},
		
		clear:function()(this.send(0x014B)),
		
		indexOf:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x0158,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		
		find:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x014C,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		selectString:function(str,idx){
			try{
				var s=WideString.from(str);
				return(SendMessageSigned(this.handle,0x014D,idx||-1,s.valueOf()));
			}finally{
				s && s.free();
			}
		},
		selectItem:function(idx)(this.row=idx),
		get selectedString()(this.item(this.row)),
		
		
	});
	
	var DropDownList=ComboBox.define({
		isDropDownList:true,
	});
	
	
	var MonitorInfoEx=new Struct({
		size:		UInt,
		left:		Int,
		top:		Int,
		right:		Int,
		bottom:		Int,
		workLeft:	Int,
		workTop:	Int,
		workRight:	Int,
		workBottom:	Int,
		flags:		UInt,
		name:		[WChar,32],
	});
	var GetCursorPos=			user32.proc("GetCursorPos",[Point],Int);
	var MonitorFromPoint=		user32.proc('MonitorFromPoint',[Int,Int,UInt],UInt);
	var MonitorFromWindow=		user32.proc('MonitorFromWindow',[UInt,UInt],UInt);
	var MonitorFromRect=		user32.proc('MonitorFromRect',[Rect,UInt],UInt);
	var MonitorEnumProc=StdCallFunction.define([UInt,UInt,UInt,UInt],Int);
	var EnumDisplayMonitors=	user32.proc('EnumDisplayMonitors',[UInt,UInt,MonitorEnumProc,UInt],Int);
	var GetMonitorInfo=			user32.proc('GetMonitorInfoW',[UInt,MonitorInfoEx],Int);
	var GetDesktopWindow=		user32.proc('GetDesktopWindow',[],UInt);
	var dx=GetSystemMetrics(76),dy=GetSystemMetrics(77),dcx=GetSystemMetrics(78),dcy=GetSystemMetrics(79);
	
	var desktop=new Window(GetDesktopWindow());
	var Display=new Class({
		__class__:{
			x:dx,y:dy,left:dx,top:dy,
			width:dcx,
			height:dcy,
			right:dx+dcx,
			left:dy+dcy,
			
			turnOff:function(lowPower)(desktop.send(0x0112,0xF170,lowPower?1:2)),
			turnOn:function()(desktop.send(0x0112,0xF170,0xFFFFFFFF)),
			get all(){
				var handles=[];
				EnumDisplayMonitors(0,0,function(h){
					handles[handles.length]=h;
					return(1);
				},0);
				for(var i=0,l=handles.length;i<l;i++){
					yield(new this(handles[i]));
				}
			},
			item:function(index)(this.all.item(index)),
			fromPoint:function(x,y){
				if((typeof(x)=='object')&&(typeof(x.x)!='undefined') && (typeof(x.y)!='undefined')){
					y=x.y;
					x=x.x;
				}
				var r=MonitorFromPoint(x,y,0);
				if(r){
					return(new this(r));
				}
			},
			get primary(){
				for(let d in this.all){
					if(d.isPrimary){
						return(d);
					}
				}
			},
			get active(){
				var r=MonitorFromWindow(GetForegroundWindow(),0);
				if(r){
					return(new this(r));
				}
			},
			get pointed(){
				try{
					var point=Point.alloc();
					GetCursorPos(point);
					return(this.fromPoint(point));
				}finally{
					free(point);
				}
			},
			
			
			get left(){
				var r=null, m=0xFFFFFFFF;
				for(let d in this.all){
					if(d.left<m){
						r=d;
						m=d.left;
					}
				}
				return(r);
			},
			get top(){
				var r=null, m=0xFFFFFFFF;
				for(let d in this.all){
					if(d.top<m){
						r=d;
						m=d.top;
					}
				}
				return(r);
			},
			get right(){
				var r=null, m=-0xFFFFFFFF;
				for(let d in this.all){
					if(d.right>m){
						r=d;
						m=d.right;
					}
				}
				return(r);
			},
			get bottom(){
				var r=null, m=-0xFFFFFFFF;
				for(let d in this.all){
					if(d.bottom>m){
						r=d;
						m=d.bottom;
					}
				}
				return(r);
			},
			get largest(){
				var r=null, m=0;
				for(let d in this.all){
					var s=d.width*d.height;
					if(s>m){
						r=d;
						m=s;
					}
				}
				return(r);
			},
		},
		__new__:function(handle){
			try{
				this.handle=handle;
				var inf=MonitorInfoEx.alloc();
				inf.size=104;
				if(GetMonitorInfo(handle,inf)){
					this.x=this.left=inf.left;
					this.y=this.top=inf.top;
					this.right=inf.right;
					this.bottom=inf.bottom;
					this.width=this.right-this.left;
					this.height=this.bottom-this.top;
					var w={};
					w.x=w.left=inf.workLeft;
					w.y=w.top=inf.workTop;
					w.right=inf.workRight;
					w.bottom=inf.workBottom;
					w.width=w.right-w.left;
					w.height=w.bottom-w.top;
					this.work=w;
					this.name=inf.name.toString();
					this.isPrimary=!!(inf.flags&0x1);
				}else{
					throw(Error('GetMonitorInfo failed: handle='+handle));
				}
			}finally{
				free(inf);
			}
		},
	});
	
	this.desktop=desktop;
	
	this.Window=Window;
	this.MessageReceiver=MessageReceiver;
	this.PlainWindow=PlainWindow;
	this.OnScreenDisplay=OnScreenDisplay;
	
	this.ChildWindow=ChildWindow;
	
	this.Edit=Edit;
	this.Button=Button;
	this.CheckBox=CheckBox;
	this.Radio=Radio;
	this.GroupBox=GroupBox;
	this.Static=Static;
	this.Bitmap=Bitmap;
	this.Icon=Icon;
	this.ListBox=ListBox;
	this.ComboBox=ComboBox;
	this.DropDownList=DropDownList;
	
	this.Display=Display;
	
	
})