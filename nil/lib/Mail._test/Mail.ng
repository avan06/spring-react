(function(){
	
	
	var MD5=require('Hash').MD5;
	var {TCP,SSL,IPAddress,ConnectError,ConnectionTimeout}=require('Socket');
	
	var decodeQP=function(str,enc)(MBString.decodeURIComponent(String(str).replace(/=\r?\n/g,'').replace(/%/g,'%25').replace(/=/g,'%'),enc));
	
	var encodeRFC1522=function(s,e){
		var e=e||"utf-8";
		var max=Math.floor((68-e.length)/4);
		return(String(s).replace(new RegExp('.{1,'+Math.floor((68-e.length)/4)+'}','g'), function($0)('=?'+e+'?B?'+Base64.encode($0,e)+'?=')).replace(/\?==\?/g,'?=\r\n =?'));
	};
	
	var decodeRFC1522=function(str)(String(str).replace(/=\?([\w\-]+)\?([QB])\?(.*?)\?\=(?:\s+(?==\?)|)/ig,function($0,enc,mode,src){
		if(mode.toLowerCase()=='q'){
			return(decodeQP(src,enc));
		}else{
			try{
				var buf=Base64.decode(src);
				buf.encoding=enc;
				return(buf.toString());
			}finally{
				free(buf);
			}
		}
	}));
	var parseRFC2231=function(s){
		s=String(s);
		var res={},m;
		if(m=s.match(/^(.*?);\s*(.*)$/)){
			res[""]=m[1];
			s=m[2];
			var re=/([^=]+)\s*=\s*(?:"([^"]*)"|([^;]*))(;\s*|$)/g;
			var m2,enc="utf8",src;
			while(m=re.exec(s)){
				var name=m[1].toLowerCase();
				var value=m[2]||m[3];
				if(m2=name.match(/^(.*)\*$/)){
					[,enc,,src]=value.match(/^([^']+)'([^']*)'(.*)$/)||[,enc,"",value];
					value=MBString.decodeURIComponent(src,enc);
					name=m2[1];
				}
				if(m2=name.match(/^(.*)\*(\d+)$/)){
					if(!(res[name=m2[1]] instanceof Array)){
						res[name=m2[1]]=[];
					}
					res[name=m2[1]][m2[2]*1]=value;
				}else{
					res[name]=value;
				}
			}
			for(let [n,v] in Iterator(res)){
				if(v instanceof Array){
					res[n]=v.join('');
				}
			}
			return(res);
		}else{
			return({"":s});
		}
	};
	
	
	
	
	var Attachment=new Class({
		__class__:{
			decode:function(h,b){
				var ct=parseRFC2231(h['content-type']||"");
				var [type,subType]=ct[''].split('/');
				
				switch((h['content-transfer-encoding']||"").toLowerCase()){
					case('base64'):{
						if(type=='text'){
							try{
								var buf=Base64.decode(b.join(" "));
								buf.encoding=ct.charset;
								b=buf.toString();
							}finally{
								free(buf);
							}
						}
						break;
					}case('quated-printable'):{
						b=decodeQP(b.join('\n'));
						break;
					}default:{
						b=b.join('\n');
						break;
					}
				}
				if(h['content-disposition'] || (typeof(b)!='string')){
					return(new this(b,h));
				}else{
					return(b);
				}
			},
		},
		__new__:function(b,h,n){
			this.type='application';
			this.subType='octet-stream';
			this.name=n||'';
			
			if(typeof(b)=='string'){
				this.__string__=b;
				this.type='text';
				this.subType='plain';
			}else if(b instanceof Array){
				this.__base64__=b.join('\n');
			}else if(b instanceof Pointer){
				this.__buffer__=b;
			}else if(b instanceof File){
				this.__file__=b;
				this.name=n||b.name;
			}
			
			h=h||{};
			if(typeof(h)=='string'){
				h={'content-type':h};
			}
			if(h['content-type']){
				var ct=parseRFC2231(h['content-type']);
				[this.type,this.subType]=ct[''].split('/');
				this.encoding=ct.charset||"utf-8";
			}
			if(h['content-disposition']){
				this.name=parseRFC2231(h['content-disposition']).filename;
			}
			this.description=h['content-description'];
		},
		toString:function(){
			var res=[
				'Content-Type: '+this.type+'/'+this.subType+((this.type=='text')?(';charset='+this.encoding):''),
				'Content-Transfer-Encoding: base64',
			];
			if(this.name){
				if(this.name.match(/^[\w\!\#\$\&\~\|\`\+\.\-\^]*$/)){
					res.push('Content-Disposition: attachment; filename="'+this.name+'"');
				}else{
					res.push('Content-Disposition: attachment; filename*="'+(this.encoding||'utf-8')+"''"+MBString.encodeURIComponent(this.name,this.encoding)+'"');
				}
			}
			return(res.join('\n')+'\n\n'+this.getBase64());
		},
		
		
		getBytes:function(){
			if(this.__base64__){
				return(Base64.decode(this.__base64__));
			}else if(this.__buffer__){
				return(this.__buffer__.clone());
			}else if(this.__file__){
				return(this.__file__.loadBytes());
			}else if(this.__string__){
				return(MBString.from(this.__string__, this.encoding||"utf8"));
			}
		},
		getString:function(enc){
			if(this.__string__){
				return(this.__string__);
			}else{
				try{
					var buf=this.getBytes();
					buf.encoding=enc||this.encoding;
					return(buf.toString());
				}finally{
					free(buf);
				}
			}
		},
		getBase64:function(){
			if(this.__base64__){
				return(this.__base64__);
			}else if(this.__buffer__){
				return(Base64.encode(this.__buffer__).replace(/\s/g,'').replace(/.{78}/g,'$&\n'));
			}else{
				try{
					var buf=this.getBytes();
					return(Base64.encode(buf).replace(/\s/g,'').replace(/.{78}/g,'$&\n'));
				}finally{
					free(buf);
				}
			}
		},
		save:function(dest){
			if(this.__string__){
				cwd().file(dest).update(this.__string__,this.encoding||"utf8");
			}else{
				try{
					var buf=this.getBytes();
					cwd().file(dest).update(buf);
				}finally{
					free(buf);
				}
			}
		},
	});
	
	
	var RemoteMail=new Class({
		__new__:function(conn,index){
			this.connection=conn;
			this.index=index;
			this.number=index+1;
		},
		
		__scanHeaders__:function(){
			try{
				var hd={}, last="", m;
				for(let l in this.connection.__readLines__()){
					if(!l){
						break;
					}else if(m=l.match(/^(\s[\s\S]*)$/)){
						hd[last][hd[last].length-1]+=m[1];
					}else if(m=l.match(/^([\s\S]*?)\s*:\s*([\s\S]*)$/)){
						last=m[1].toLowerCase();
						(hd[last]||(hd[last]=[])).push(m[2]);
					}
				}
				for(let [n,v] in Iterator(hd)){
					for(var i=0,l=v.length;i<l;++i){
//						println([n,v[i]]);
						v[i]=decodeRFC1522(v[i]);
						if(n=='content-type'){
							this.connection.__connection__.encoding=parseRFC2231(v[i]).charset;
						}
					}
					if(v.length<=1){
						hd[n]=v[0];
					}
				}
				return(hd);
			}catch(e){
			}
		},
		__scanMultipart__:function(bd){
			var mid='--'+bd, end='--'+bd+'--';
			for(let l in this.connection.__readLines__()){
				if(l==mid){
					break;
				}
			}
			var res=[];
			while(true){
				var hdr=this.__scanHeaders__();
				if((hdr['content-type']||"").match(/^multipart/i)){
					res[res.length]=this.__scanMultipart__(parseRFC2231(hdr['content-type']).boundary);
					for(let l in this.connection.__readLines__()){
						if(l==mid){
							break;
						}else if(l==end){
							return(res);
						}
					}
				}else{
					//TODO support message/rfc822
					
					var lines=[];
					for(let l in this.connection.__readLines__()){
						if(l==mid){
							res[res.length]=Attachment.decode(hdr,lines);
							break;
						}else if(l==end){
							res[res.length]=Attachment.decode(hdr,lines);
							return(res);
						}else{
							lines[lines.length]=l;
						}
					}
				}
			}
		},
		
		__scan__:function(){
			this.connection.__command__('RETR',this.number);
			this.__headers__=this.__scanHeaders__();
			this.__message__="";
			this.__subMessages__=[];
			this.__files__=[];
			
			if(!this.__headers__['mime-version']){
				var a=[];
				for(let l in this.connection.__readLines__()){
					a[a.length]=l;
				}
				this.__message__=a.join("\n");
			}else if(this.__headers__['content-type'].match(/^multipart/i)){
				var parts=this.__scanMultipart__(parseRFC2231(this.__headers__['content-type']).boundary);
				for(var i=0,l=parts.length;i<l;i++){
					var p=parts[i];
					if(typeof(p)=='string'){
						if(this.__message__){
							this.__subMessages__.push(p);
						}else{
							this.__message__=p;
						}
					}else if(!p.name){
						this.__subMessages__.push(p);
					}else{
						this.__files__.push(p);
					}
				}
				this.connection.__discardLines__();
			}else{
				var a=[];
				for(let l in this.connection.__readLines__()){
					a[a.length]=l;
				}
				var res=Attachment.decode(this.__headers__,a);
				if(typeof(res)=='string'){
					this.__message__=res;
				}else{
					this.__subMessages__.push(res);
				}
			}
		},
		
		
		get headers(){
			if(!this.__headers__){
				this.connection.__command__('TOP',this.number+' 0');
				this.__headers__=this.__scanHeaders__();
				this.connection.__discardLines__();
			}
			return(this.__headers__);
		},
		
		get subject()(this.headers.subject),
		get from(){
			var m,res;
			var hdr=this.headers.from;
			var re=/[^<,]*<([^>]*)>|([^\s,]+)/g;
			while(m=re.exec(hdr)){
				if(res){
					return(this.headers.sender||res);
				}else{
					res=m[1]||m[2];
				}
			}
			return(res);
		},
		get to(){
			var m,res=[];
			var hdr=this.headers.from+(this.headers.cc?(','+this.headers.cc):'');
			var re=/[^<,]*<([^>]*)>|([^,]+)/g;
			while(m=re.exec(hdr)){
				res.push(m[1]||m[2]);
			}
			return(res);
		},
		get date()(this.headers.date&&new Date(Date.parse(this.headers.date))),
		
		get route(){
			var a=(this.headers.received instanceof Array)?this.headers.received:[this.headers.received];
			var res=[];
			for(var i=0,l=a.length;i<l;i++){
				if(i==0){
					res.push((a[i].match(/(?:^|\s)by\s+([\w\.\-\+]+)/i)||[])[1]);
				}
				res.push((a[i].match(/(?:^|\s)from\s+([\w\.\-\+]+)/i)||[])[1]);
			}
			res.reverse();
			return(res);
		},
		
		
		get message(){
			if(!this.__files__){
				this.__scan__();
			}
			return(this.__message__);
		},
		get subMessages(){
			if(!this.__files__){
				this.__scan__();
			}
			for(var i=0,a=this.__subMessages__,l=a.length;i<l;++i){
				yield(a[i]);
			}
		},
		get files(){
			if(!this.__files__){
				this.__scan__();
			}
			for(var i=0,a=this.__files__,l=a.length;i<l;++i){
				yield(a[i]);
			}
		},
		
		get uid(){
			if(!this.__uid__){
				try{
					[,this.__uid__]=this.connection.__command__('UIDL',this.number).match(/^\d+\s(.*)$/)||[];
				}catch(e){
				}
			}
			return(this.__uid__);
		},
		remove:function(){
			try{
				this.connection.__command__('DELE',this.number);
				return(true);
			}catch(e){
			}
		},
	});
	
	
	var POP3=new Class({
		__new__:function(opt){
			opt=opt||{};
			this.host=opt.host;
			this.ssl=opt.ssl;
			if(opt.ssl){
				this.port=opt.port||995;
				this.__connection__=SSL.connect(this.host,this.port,this.proxy,opt.connectionTimeOut||opt.timeout);
			}else{
				this.port=opt.port||110;
				this.__connection__=TCP.connect(this.host,this.port,opt.connectionTimeOut||opt.timeout);
			}
			this.__connection__.lineSeparator='\r\n';
			var line=this.__connection__.readLine();
			var [stamp]=line.match(/<.*>/);
			
			try{
				if(opt.apop && !stamp){
					throw(new Error("APOP is unavailable"));
				}else if(!stamp||(('apop' in opt) && !opt.apop)){
					this.__command__('USER',opt.user);
					this.__command__('PASS',opt.password||opt.pass);
				}else{
					this.__command__('APOP',opt.user+' '+MD5.calc([stamp+(opt.password||opt.pass)]).toLowerCase());
				}
			}catch(e){
				this.free();
				throw(e);
			}
		},
		free:function(){
			this.__command__('QUIT');
			free(this.__connection__);
		},
		
		get count()(this.__command__('STAT').match(/^\d+/)[0]),
		
		item:function(index)(new RemoteMail(this,index)),
		get items(){
			var res=this.__command__('LIST');
			if(res!='.'){
				var a=this.__readLines__().toArray();
				for(var i=0,l=a.length;i<l;i++){
					yield(new RemoteMail(this,a[i].match(/^\d+/)[0]-1));
				}
			}
		},
		
		
		noop:function()(this.__command__('NOOP')),
		reset:function()(this.__command__('RSET')),
		
		__command__:function(name,params){
			this.__connection__.encoding='utf8';
			this.__connection__.writeLine(Array.join(arguments,' '));
			var r=this.__connection__.readLine();
			var m=r.match(/^(\+|\-)\w+\s?(.*)$/)||[,"-",r];
//			println("S: "+r);
			if(m[1]=='+'){
				return(m[2]);
			}else{
				throw(m[2]);
			}
		},
		__readAll__:function()(this.__readLines__().toArray().join("\n")),
		__readLines__:function(){
			while(true){
				var l=this.__connection__.readLine();
//				println("S: "+l);
				if(l=='.'){
					break;
				}else{
					yield(l.replace(/^\./,''));
				}
			}
		},
		__discardLines__:function(){
			while(true){
				if(this.__connection__.readLine()=='.'){
					break;
				}
			}
		},
	});
	
	
	
	var Mail=new Class({
		__new__:function(obj){
			obj=Object.extend({files:{},encoding:'utf-7'},obj||{});
			var enc=this.encoding=obj.encoding;
			var rcpt=[];
			var hdrs=Object.extend({},obj.headers||{});
			
			if(obj.to){
				var tos=[];
				if(!(obj.to instanceof Array)){
					obj.to=[obj.to];
				}
				for(var i=0,a=obj.to||[],l=a.length;i<l;++i){
					rcpt.push(a[i].replace(/^.*<(.*)>.*$/,'$1'));
					tos.push(a[i].replace(/^(.*[^\w \.\-\$#].*)(<.*>.*)$/,function($0,$1,$2)(encodeRFC1522($1,enc)+$2)));
				}
				hdrs.To=tos.join(', ');
			}
			if(obj.cc){
				if(!(obj.cc instanceof Array)){
					obj.cc=[obj.cc];
				}
				var ccs=[];
				for(var i=0,a=obj.cc||[],l=a.length;i<l;++i){
					rcpt.push(a[i].replace(/^.*<(.*)>.*$/,'$1'));
					ccs.push(a[i].replace(/^(.*[^\w \.\-\$#].*)(<.*>.*)$/,function($0,$1,$2)(encodeRFC1522($1,enc)+$2)));
				}
				hdrs.Cc=ccs.join(', ');
			}
			if(obj.bcc){
				if(!(obj.bcc instanceof Array)){
					obj.bcc=[obj.bcc];
				}
				for(var i=0,a=obj.bcc,l=a.length;i<l;++i){
					rcpt.push(a[i].replace(/^.*<(.*)>.*$/,'$1'));
				}
			}
			this.recipients=rcpt;
			
			if(obj.from){
				this.from=obj.from.replace(/^.*<(.*)>.*$/,'$1');
				hdrs.From=obj.from.replace(/^(.*[^\w \.\-\$#].*)(<.*>.*)$/,function($0,$1,$2)(encodeRFC1522($1,enc)+$2));
			}
			if(obj.subject){
				hdrs.Subject=obj.subject.replace(/^(.*[^\w \.\-\$#].*)$/,function($0,$1)(encodeRFC1522($1,enc)));
			}
			this.headers=hdrs;
			this.message=obj.message;
			
			var atts=[];
			if(obj.files instanceof File){
				atts=[new Attachment(obj.files)];
			}else if(obj.files instanceof Array){
				for(var i=0,a=obj.files,l=a.length;i<l;++i){
					atts.push(new Attachment(a[i]));
				}
			}else if(typeof(obj.files)=='object'){
				for(let [n,v] in Iterator(obj.files)){
					var [,ct,name]=n.match(/^(.*):(.*)$/)||[,,n];
					atts.push(new Attachment(v,ct,name));
				}
			}
			this.files=atts;
			
		},
		__writeTo__:function(s){
			var h=[],b="";
			
			s.encoding='utf8';
			for(let [n,v] in Iterator(this.headers)){
				if(v instanceof Array){
					for(var i=0,l=v.length;i<l;++i){
						s.writeLine(n+': '+v[i]);
					}
				}else{
					s.writeLine(n+': '+v);
				}
			}
			
			s.writeLine('MIME-Version: 1.0');
			if(this.files.length){
				var bd='----_=_NextPart_'+String.random(16)+'.'+now().getTime().toString(16);
				
				s.writeLine('Content-Type: multipart/mixed; boundary="'+bd+'"');
				s.writeLine('');
				b=[];
				s.writeLine('This is a multi-part message in MIME format.');
				s.writeLine('--'+bd);
				s.writeLine('Content-Type: text/plain; charset="'+this.encoding+'"');
				s.writeLine('Content-Transfer-Encoding: 7bit');
				s.writeLine('');
				s.encoding=this.encoding;
				
				s.writeLine(this.message.replace(/\r?\n/g,'\r\n'));
				s.encoding='utf8';
				
				for(var i=0,a=this.files,l=a.length;i<l;++i){
					s.writeLine('--'+bd);
					s.writeLine(a.toString().replace(/\r?\n/g,'\r\n'));
				}
				s.writeLine('--'+bd+'--');
			}else{
				s.writeLine('Content-Type: text/plain; charset="'+this.encoding+'"');
				s.writeLine('Content-Transfer-Encoding: 7bit');
				s.writeLine('');
				s.encoding=this.encoding;
				
				s.writeLine(this.message.replace(/\r?\n/g,'\r\n'));
			}
		},
		send:function(opt){
			try{
				var smtp=new SMTP(opt);
				smtp.send(this);
			}finally{
				free(smtp);
			}
		},
	});
	
	
	var SMTP=new Class({
		
		__new__:function(opt){
			opt=opt||{};
			this.host=opt.host;
			
			
			if(opt.pop){
				try{
					var p=new POP3(Object.extend({
						user:opt.user,
						password:opt.password,
						ssl:opt.ssl,
						host:opt.host,
					},(typeof(opt.pop)=='object')?opt.pop:{host:(typeof(opt.pop)=='string')?opt.pop:opt.host}));
				}finally{
					free(p);
				}
			}
			this.ssl=opt.ssl;
			if(opt.ssl){
				this.port=opt.port||465;
				this.__connection__=SSL.connect(this.host,this.port,this.proxy,opt.connectionTimeOut||opt.timeout);
			}else{
				this.port=opt.port||25;
				this.__connection__=TCP.connect(this.host,this.port,opt.connectionTimeOut||opt.timeout);
			}
			this.__connection__.lineSeparator='\r\n';
			this.__readResponse__();
			this.__extraServices__=this.__command__('EHLO',this.host).slice(1);
			
			try{
				if(opt.password && !opt.pop){
					var auth=(this.__extraServices__.join("\n").match(/AUTH[\s=](.+)/i)||["",""])[1].toLowerCase().split(/\s+/);
					if(auth.indexOf('cram-md5')!=-1){
						try{
							var buf=Base64.decode(this.__command__('AUTH','CRAM-MD5')[1]);
							this.__write__(Base64.encode(opt.user+' '+require("Cipher").HMAC.calcHex(buf,opt.password,"md5")));
						}finally{
							free(buf);
						}
						this.__readResponse__();
					}else if(!opt.noPlain && (auth.indexOf('plain')!=-1)){
						try{
							var buf=MBString.from(opt.user+"\0"+opt.user+"\0"+opt.password,opt.encoding||"utf8");
							this.__command__('AUTH','PLAIN',Base64.encode(buf));
						}finally{
							free(buf);
						}
					}else{
						throw("Auth method unavailable");
					}
				}
				
			}catch(e){
//				println(e);
				this.free();
				throw(e);
			}
			
		},
		
		free:function(){
			this.__command__('QUIT');
			free(this.__connection__);
		},
		__readResponse__:function(){
			var code,res,m;
			while(m=this.__connection__.readLine().match(/^(\d+)(-|\s+)(.*)$/)){
//				println("S: "+m[0]);
				if(!res){
					res=[m[1]];
				}
				res.push(m[3]);
				if(m[2]!='-'){
					break;
				}
			}
			if(!res){
				throw("unexpected response");
			}else if(res[0].match(/^[45]/)){
				throw(res.join('\n'));
			}else{
				return(res);
			}
			
		},
		__command__:function(name,params){
//			println("C: "+Array.join(arguments,' '));
			this.__connection__.writeLine(Array.join(arguments,' '));
			return(this.__readResponse__());
		},
		__write__:function(line){
			this.__connection__.writeLine(line);
		},
		__writeData__:function(data){
			var enc;
			for(var i=0,a=String(data).split(/\r?\n/),l=a.length;i<l;i++){
//				println('C: '+a[i]);

				
				this.__connection__.writeLine(a[i].replace(/^\./,'..'));
			}
//			println('C: .');
			this.__connection__.writeLine('.');
		},
		
		send:function(obj){
			if(!(obj instanceof Mail)){
				obj=new Mail(obj);
			}
			this.__command__("MAIL",'FROM:<'+(obj.from||'')+'>');
			for(var i=0,a=obj.recipients,l=a.length;i<l;++i){
				this.__command__('RCPT','TO:<'+a[i]+'>');
			}
			this.__command__('DATA');
			this.__connection__.encoding=obj.encoding;
			obj.__writeTo__(this.__connection__);
			this.__connection__.writeLine('.');
			
//			this.__writeData__(obj.toString());
			return(this.__readResponse__());
		},
		
		
	});
	
	
	
	
	this.POP3=POP3;
	this.SMTP=SMTP;
	this.Mail=Mail;
	this.RemoteMail=RemoteMail;
})